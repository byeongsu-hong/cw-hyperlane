name: test

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  unit-test:
    strategy:
      fail-fast: true
    
    name: unit-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        run: rustup update 1.72

      - name: Install rename
        run: sudo apt-get install -y rename

      - name: Install rust deps
        run: make install

      - name: Run tests
        run: cargo test --workspace --exclude hpl-tests

  artifact:
    permissions:
      contents: write
      pull-requests: write

    name: artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Dependencies
        run: |
          rustup update 1.72
          sudo apt-get install -y rename
          make install

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build wasm
        run: make ci-build

      - name: Pull request artifacts
        uses: gavv/pull-request-artifacts@v2
        with:
          commit: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          artifacts-branch: artifacts
          artifacts: |
            wasm_codes.zip

  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Install Rust
        run: |
          rustup update nightly
          rustup target add wasm32-unknown-unknown

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --workspace --exclude hpl-tests --codecov --output-path codecov.json

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          fail_ci_if_error: true
