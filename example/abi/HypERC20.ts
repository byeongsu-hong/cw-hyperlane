export const HypERC20 = {
  abi: [
    {
      type: "constructor",
      inputs: [
        { name: "__decimals", type: "uint8", internalType: "uint8" },
        { name: "_mailbox", type: "address", internalType: "address" },
      ],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "allowance",
      inputs: [
        { name: "owner", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
      ],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "approve",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "balanceOf",
      inputs: [{ name: "_account", type: "address", internalType: "address" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "decimals",
      inputs: [],
      outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "decreaseAllowance",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        {
          name: "subtractedValue",
          type: "uint256",
          internalType: "uint256",
        },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "destinationGas",
      inputs: [{ name: "", type: "uint32", internalType: "uint32" }],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "domains",
      inputs: [],
      outputs: [{ name: "", type: "uint32[]", internalType: "uint32[]" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "enrollRemoteRouter",
      inputs: [
        { name: "_domain", type: "uint32", internalType: "uint32" },
        { name: "_router", type: "bytes32", internalType: "bytes32" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "enrollRemoteRouters",
      inputs: [
        { name: "_domains", type: "uint32[]", internalType: "uint32[]" },
        {
          name: "_addresses",
          type: "bytes32[]",
          internalType: "bytes32[]",
        },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "handle",
      inputs: [
        { name: "_origin", type: "uint32", internalType: "uint32" },
        { name: "_sender", type: "bytes32", internalType: "bytes32" },
        { name: "_message", type: "bytes", internalType: "bytes" },
      ],
      outputs: [],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "hook",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "address",
          internalType: "contract IPostDispatchHook",
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "increaseAllowance",
      inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "addedValue", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "initialize",
      inputs: [
        {
          name: "_totalSupply",
          type: "uint256",
          internalType: "uint256",
        },
        { name: "_name", type: "string", internalType: "string" },
        { name: "_symbol", type: "string", internalType: "string" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "interchainSecurityModule",
      inputs: [],
      outputs: [
        {
          name: "",
          type: "address",
          internalType: "contract IInterchainSecurityModule",
        },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "localDomain",
      inputs: [],
      outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "mailbox",
      inputs: [],
      outputs: [
        { name: "", type: "address", internalType: "contract IMailbox" },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "name",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "owner",
      inputs: [],
      outputs: [{ name: "", type: "address", internalType: "address" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "quoteGasPayment",
      inputs: [
        {
          name: "_destinationDomain",
          type: "uint32",
          internalType: "uint32",
        },
      ],
      outputs: [
        { name: "_gasPayment", type: "uint256", internalType: "uint256" },
      ],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "renounceOwnership",
      inputs: [],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "routers",
      inputs: [{ name: "_domain", type: "uint32", internalType: "uint32" }],
      outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "setDestinationGas",
      inputs: [
        { name: "domain", type: "uint32", internalType: "uint32" },
        { name: "gas", type: "uint256", internalType: "uint256" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "setDestinationGas",
      inputs: [
        {
          name: "gasConfigs",
          type: "tuple[]",
          internalType: "struct GasRouter.GasRouterConfig[]",
          components: [
            { name: "domain", type: "uint32", internalType: "uint32" },
            { name: "gas", type: "uint256", internalType: "uint256" },
          ],
        },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "setHook",
      inputs: [{ name: "_hook", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "setInterchainSecurityModule",
      inputs: [{ name: "_module", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "symbol",
      inputs: [],
      outputs: [{ name: "", type: "string", internalType: "string" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "totalSupply",
      inputs: [],
      outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
      stateMutability: "view",
    },
    {
      type: "function",
      name: "transfer",
      inputs: [
        { name: "to", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "transferFrom",
      inputs: [
        { name: "from", type: "address", internalType: "address" },
        { name: "to", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
      ],
      outputs: [{ name: "", type: "bool", internalType: "bool" }],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "transferOwnership",
      inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "transferRemote",
      inputs: [
        { name: "_destination", type: "uint32", internalType: "uint32" },
        { name: "_recipient", type: "bytes32", internalType: "bytes32" },
        { name: "_amountOrId", type: "uint256", internalType: "uint256" },
      ],
      outputs: [
        { name: "messageId", type: "bytes32", internalType: "bytes32" },
      ],
      stateMutability: "payable",
    },
    {
      type: "function",
      name: "unenrollRemoteRouter",
      inputs: [{ name: "_domain", type: "uint32", internalType: "uint32" }],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "function",
      name: "unenrollRemoteRouters",
      inputs: [
        { name: "_domains", type: "uint32[]", internalType: "uint32[]" },
      ],
      outputs: [],
      stateMutability: "nonpayable",
    },
    {
      type: "event",
      name: "Approval",
      inputs: [
        {
          name: "owner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "spender",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "value",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Initialized",
      inputs: [
        {
          name: "version",
          type: "uint8",
          indexed: false,
          internalType: "uint8",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "OwnershipTransferred",
      inputs: [
        {
          name: "previousOwner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "newOwner",
          type: "address",
          indexed: true,
          internalType: "address",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "ReceivedTransferRemote",
      inputs: [
        {
          name: "origin",
          type: "uint32",
          indexed: true,
          internalType: "uint32",
        },
        {
          name: "recipient",
          type: "bytes32",
          indexed: true,
          internalType: "bytes32",
        },
        {
          name: "amount",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "SentTransferRemote",
      inputs: [
        {
          name: "destination",
          type: "uint32",
          indexed: true,
          internalType: "uint32",
        },
        {
          name: "recipient",
          type: "bytes32",
          indexed: true,
          internalType: "bytes32",
        },
        {
          name: "amount",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
    {
      type: "event",
      name: "Transfer",
      inputs: [
        {
          name: "from",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "to",
          type: "address",
          indexed: true,
          internalType: "address",
        },
        {
          name: "value",
          type: "uint256",
          indexed: false,
          internalType: "uint256",
        },
      ],
      anonymous: false,
    },
  ],
  bytecode: {
    object:
      "0x60e06040523480156200001157600080fd5b506040516200325b3803806200325b833981016040819052620000349162000181565b80808080806001600160a01b0381163b620000955760405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f780000604482015260640160405180910390fd5b6001600160a01b03821660808190526040805163234d8e3d60e21b81529051638d3638f4916004808201926020929091908290030181865afa158015620000e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001069190620001d0565b63ffffffff1660a0526200011a336200012f565b50505060ff90931660c05250620001ff915050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080604083850312156200019557600080fd5b825160ff81168114620001a757600080fd5b60208401519092506001600160a01b0381168114620001c557600080fd5b809150509250929050565b600060208284031215620001e357600080fd5b815163ffffffff81168114620001f857600080fd5b9392505050565b60805160a05160c0516130176200024460003960006102f3015260006104ab0152600081816105b401528181610ab101528181611e72015261221701526130176000f3fe6080604052600436106101fe5760003560e01c80637f5a7c7b1161011d578063b49c53a7116100b0578063e9198bf91161007f578063efae508a11610064578063efae508a14610696578063f2ed8c53146106b6578063f2fde38b146106d657600080fd5b8063e9198bf914610656578063eedfca5f1461067657600080fd5b8063b49c53a714610582578063d5438eae146105a2578063dd62ed3e146105d6578063de523cf31461062957600080fd5b806395d89b41116100ec57806395d89b411461050d578063a457c2d714610522578063a9059cbb14610542578063b1bd64361461056257600080fd5b80637f5a7c7b1461043457806381b4e8b4146104865780638d3638f4146104995780638da5cb5b146104e257600080fd5b80633dfd38731161019557806370a082311161016457806370a08231146103b2578063715018a6146103d257806371a15b38146103e7578063775313a11461040757600080fd5b80633dfd38731461033d578063440df4f41461035d57806349d462ef1461037f57806356d5d4751461039f57600080fd5b806323b872dd116101d157806323b872dd1461029f5780632ead72f6146102bf578063313ce567146102df578063395093511461031d57600080fd5b806306fdde0314610203578063095ea7b31461022e5780630e72cc061461025e57806318160ddd14610280575b600080fd5b34801561020f57600080fd5b506102186106f6565b604051610225919061267f565b60405180910390f35b34801561023a57600080fd5b5061024e6102493660046126bb565b610788565b6040519015158152602001610225565b34801561026a57600080fd5b5061027e6102793660046126e5565b6107a2565b005b34801561028c57600080fd5b506035545b604051908152602001610225565b3480156102ab57600080fd5b5061024e6102ba366004612700565b6108bd565b3480156102cb57600080fd5b506102916102da366004612750565b6108e1565b3480156102eb57600080fd5b5060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610225565b34801561032957600080fd5b5061024e6103383660046126bb565b610900565b34801561034957600080fd5b5061027e6103583660046126e5565b61094c565b34801561036957600080fd5b50610372610a62565b604051610225919061276b565b34801561038b57600080fd5b5061027e61039a3660046127b5565b610a73565b61027e6103ad3660046127d1565b610a99565b3480156103be57600080fd5b506102916103cd3660046126e5565b610c0d565b3480156103de57600080fd5b5061027e610c38565b3480156103f357600080fd5b5061027e61040236600461289d565b610c4c565b34801561041357600080fd5b50610291610422366004612750565b60fc6020526000908152604090205481565b34801561044057600080fd5b506097546104619073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610225565b6102916104943660046128df565b610ca7565b3480156104a557600080fd5b506104cd7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610225565b3480156104ee57600080fd5b5060655473ffffffffffffffffffffffffffffffffffffffff16610461565b34801561051957600080fd5b50610218610cb5565b34801561052e57600080fd5b5061024e61053d3660046126bb565b610cc4565b34801561054e57600080fd5b5061024e61055d3660046126bb565b610d95565b34801561056e57600080fd5b5061027e61057d366004612912565b610da3565b34801561058e57600080fd5b5061027e61059d3660046127b5565b610e2d565b3480156105ae57600080fd5b506104617f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e257600080fd5b506102916105f1366004612987565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260346020908152604080832093909416825291909152205490565b34801561063557600080fd5b506098546104619073ffffffffffffffffffffffffffffffffffffffff1681565b34801561066257600080fd5b5061027e6106713660046129ba565b610e3f565b34801561068257600080fd5b5061027e610691366004612b00565b610f1e565b3480156106a257600080fd5b5061027e6106b1366004612750565b6110be565b3480156106c257600080fd5b506102916106d1366004612750565b6110d2565b3480156106e257600080fd5b5061027e6106f13660046126e5565b6110ed565b60606036805461070590612b6d565b80601f016020809104026020016040519081016040528092919081815260200182805461073190612b6d565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b5050505050905090565b6000336107968185856111a1565b60019150505b92915050565b8073ffffffffffffffffffffffffffffffffffffffff81163b1515806107dc575073ffffffffffffffffffffffffffffffffffffffff8116155b61086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610875611354565b50609880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000336108cb8582856113d5565b6108d68585856114a6565b506001949350505050565b6000806108f860c963ffffffff8086169061171c16565b949350505050565b33600081815260346020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906107969082908690610947908790612bef565b6111a1565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610986575073ffffffffffffffffffffffffffffffffffffffff8116155b610a12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610864565b610a1a611354565b50609780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6060610a6e60c9611735565b905090565b610a7b611354565b63ffffffff91909116600090815260fc6020526040902055565b5050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f60448201527f78000000000000000000000000000000000000000000000000000000000000006064820152608401610864565b6000610b69856117f0565b9050838114610bfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201527f656e6465720000000000000000000000000000000000000000000000000000006064820152608401610864565b610c0685858585611856565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526033602052604081205461079c565b610c40611354565b610c4a60006118e0565b565b610c54611354565b8060005b81811015610ca157610c8f848483818110610c7557610c75612c02565b9050602002016020810190610c8a9190612750565b611957565b610c9a600182612bef565b9050610c58565b50505050565b60006108f8848484346119ac565b60606037805461070590612b6d565b33600081815260346020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610d88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610864565b6108d682868684036111a1565b6000336107968185856114a6565b610dab611354565b60005b81811015610e2857610e16838383818110610dcb57610dcb612c02565b610de19260206040909202019081019150612750565b848484818110610df357610df3612c02565b9050604002016020013563ffffffff909116600090815260fc6020526040902055565b610e21600182612bef565b9050610dae565b505050565b610e35611354565b610a958282611a1b565b610e47611354565b828114610eb0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216c656e677468000000000000000000000000000000000000000000000000006044820152606401610864565b8260005b81811015610f1657610f04868683818110610ed157610ed1612c02565b9050602002016020810190610ee69190612750565b858584818110610ef857610ef8612c02565b90506020020135611a1b565b610f0f600182612bef565b9050610eb4565b505050505050565b600054610100900460ff1615808015610f3e5750600054600160ff909116105b80610f585750303b158015610f58575060005460ff166001145b610fe4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610864565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561104257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61104c8383611a31565b6110563385611ad2565b8015610ca157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6110c6611354565b6110cf81611957565b50565b600061079c8260405180602001604052806000815250611bc7565b6110f5611354565b73ffffffffffffffffffffffffffffffffffffffff8116611198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610864565b6110cf816118e0565b73ffffffffffffffffffffffffffffffffffffffff8316611243576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff82166112e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60655473ffffffffffffffffffffffffffffffffffffffff163314610c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610864565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152603460209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ca15781811015611499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610864565b610ca184848484036111a1565b73ffffffffffffffffffffffffffffffffffffffff8316611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff82166115ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260336020526040902054818110156116a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061170f9086815260200190565b60405180910390a3610ca1565b6000806117298484611be0565b915091505b9250929050565b6060600061174283611c1a565b9050805167ffffffffffffffff81111561175e5761175e612a26565b604051908082528060200260200182016040528015611787578160200160208202803683370190505b50915060005b81518110156117e9578181815181106117a8576117a8612c02565b60200260200101518382815181106117c2576117c2612c02565b63ffffffff90921660209283029190910190910152806117e181612c31565b91505061178d565b5050919050565b6000808061180860c963ffffffff8087169061171c16565b915091508161181685611cb5565b9061184e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864919061267f565b509392505050565b60006118628383611cec565b905060006118708484611d0b565b905036600061187f8686611d1b565b9150915061189561188d8590565b848484611d2b565b838863ffffffff167fba20947a325f450d232530e5f5fce293e7963499d5309a07cee84a269f2f15a6856040516118ce91815260200190565b60405180910390a35050505050505050565b6065805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61196b60c963ffffffff80841690611d3516565b61197482611cb5565b90610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864919061267f565b6000806119b884611d41565b90506119cf86846119ca888886611d61565b611d90565b9150848663ffffffff167fd229aacb94204188fe8042965fa6b269c62dc5818b21238779ab64bdd17efeec86604051611a0a91815260200190565b60405180910390a350949350505050565b610a9560c963ffffffff808516908490611db316565b600054610100900460ff16611ac8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610864565b610a958282611dbe565b73ffffffffffffffffffffffffffffffffffffffff8216611b4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610864565b8060356000828254611b619190612bef565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080611bd3846117f0565b90506108f8848285611e6e565b6000818152600283016020526040812054819080611c0f57611c028585611f4f565b92506000915061172e9050565b60019250905061172e565b60606000611c2783611f5b565b90508067ffffffffffffffff811115611c4257611c42612a26565b604051908082528060200260200182016040528015611c6b578160200160208202803683370190505b50915060005b818110156117e957611c838482611f66565b60001c838281518110611c9857611c98612c02565b602090810291909101015280611cad81612c31565b915050611c71565b6060611cc68263ffffffff16611f72565b604051602001611cd69190612c69565b6040516020818303038152906040529050919050565b6000611cfb6020828486612cae565b611d0491612cd8565b9392505050565b6000611cfb604060208486612cae565b3660006117298360408187612cae565b610ca18484611ad2565b6000611d048383612030565b6060611d4d338361204d565b505060408051602081019091526000815290565b6060838383604051602001611d7893929190612d14565b60405160208183030381529060405290509392505050565b600080611d9c856117f0565b9050611daa85828686612213565b95945050505050565b610ca18383836122f7565b600054610100900460ff16611e55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610864565b6036611e618382612d87565b506037610e288282612d87565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166381d2ea95858585611eb889612314565b6097546040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b168152611f0e959493929173ffffffffffffffffffffffffffffffffffffffff1690600401612ea1565b602060405180830381865afa158015611f2b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190612f01565b6000611d048383612336565b600061079c8261234e565b6000611d048383612358565b60606000611f7f83612382565b600101905060008167ffffffffffffffff811115611f9f57611f9f612a26565b6040519080825280601f01601f191660200182016040528015611fc9576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084611fd357509392505050565b60008181526002830160205260408120819055611d048383612464565b73ffffffffffffffffffffffffffffffffffffffff82166120f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260336020526040902054818110156121a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166310b83dc08487878661225e8b612314565b6097546040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1681526122b4959493929173ffffffffffffffffffffffffffffffffffffffff1690600401612ea1565b60206040518083038185885af11580156122d2573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611daa9190612f01565b600082815260028401602052604081208290556108f88484612470565b63ffffffff8116600090815260fc602052604090205460609061079c9061247c565b60008181526001830160205260408120541515611d04565b600061079c825490565b600082600001828154811061236f5761236f612c02565b9060005260206000200154905092915050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106123cb577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106123f7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061241557662386f26fc10000830492506010015b6305f5e100831061242d576305f5e100830492506008015b612710831061244157612710830492506004015b60648310612453576064830492506002015b600a831061079c5760010192915050565b6000611d04838361249a565b6000611d04838361258d565b606061079c60008333604051806020016040528060008152506125dc565b600081815260018301602052604081205480156125835760006124be600183612f1a565b85549091506000906124d290600190612f1a565b90508181146125375760008660000182815481106124f2576124f2612c02565b906000526020600020015490508087600001848154811061251557612515612c02565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061254857612548612f2d565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061079c565b600091505061079c565b60008181526001830160205260408120546125d45750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561079c565b50600061079c565b60606001858585856040516020016125f8959493929190612f5c565b6040516020818303038152906040529050949350505050565b60005b8381101561262c578181015183820152602001612614565b50506000910152565b6000815180845261264d816020860160208601612611565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611d046020830184612635565b803573ffffffffffffffffffffffffffffffffffffffff811681146126b657600080fd5b919050565b600080604083850312156126ce57600080fd5b6126d783612692565b946020939093013593505050565b6000602082840312156126f757600080fd5b611d0482612692565b60008060006060848603121561271557600080fd5b61271e84612692565b925061272c60208501612692565b9150604084013590509250925092565b803563ffffffff811681146126b657600080fd5b60006020828403121561276257600080fd5b611d048261273c565b6020808252825182820181905260009190848201906040850190845b818110156127a957835163ffffffff1683529284019291840191600101612787565b50909695505050505050565b600080604083850312156127c857600080fd5b6126d78361273c565b600080600080606085870312156127e757600080fd5b6127f08561273c565b935060208501359250604085013567ffffffffffffffff8082111561281457600080fd5b818701915087601f83011261282857600080fd5b81358181111561283757600080fd5b88602082850101111561284957600080fd5b95989497505060200194505050565b60008083601f84011261286a57600080fd5b50813567ffffffffffffffff81111561288257600080fd5b6020830191508360208260051b850101111561172e57600080fd5b600080602083850312156128b057600080fd5b823567ffffffffffffffff8111156128c757600080fd5b6128d385828601612858565b90969095509350505050565b6000806000606084860312156128f457600080fd5b6128fd8461273c565b95602085013595506040909401359392505050565b6000806020838503121561292557600080fd5b823567ffffffffffffffff8082111561293d57600080fd5b818501915085601f83011261295157600080fd5b81358181111561296057600080fd5b8660208260061b850101111561297557600080fd5b60209290920196919550909350505050565b6000806040838503121561299a57600080fd5b6129a383612692565b91506129b160208401612692565b90509250929050565b600080600080604085870312156129d057600080fd5b843567ffffffffffffffff808211156129e857600080fd5b6129f488838901612858565b90965094506020870135915080821115612a0d57600080fd5b50612a1a87828801612858565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112612a6657600080fd5b813567ffffffffffffffff80821115612a8157612a81612a26565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715612ac757612ac7612a26565b81604052838152866020858801011115612ae057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215612b1557600080fd5b83359250602084013567ffffffffffffffff80821115612b3457600080fd5b612b4087838801612a55565b93506040860135915080821115612b5657600080fd5b50612b6386828701612a55565b9150509250925092565b600181811c90821680612b8157607f821691505b602082108103612bba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561079c5761079c612bc0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c6257612c62612bc0565b5060010190565b7f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a2000815260008251612ca181601f850160208701612611565b91909101601f0192915050565b60008085851115612cbe57600080fd5b83861115612ccb57600080fd5b5050820193919092039150565b8035602083101561079c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b83815282602082015260008251612d32816040850160208701612611565b91909101604001949350505050565b601f821115610e2857600081815260208120601f850160051c81016020861015612d685750805b601f850160051c820191505b81811015610f1657828155600101612d74565b815167ffffffffffffffff811115612da157612da1612a26565b612db581612daf8454612b6d565b84612d41565b602080601f831160018114612e085760008415612dd25750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610f16565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612e5557888601518255948401946001909101908401612e36565b5085821015612e9157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b63ffffffff8616815284602082015260a060408201526000612ec660a0830186612635565b8281036060840152612ed88186612635565b91505073ffffffffffffffffffffffffffffffffffffffff831660808301529695505050505050565b600060208284031215612f1357600080fd5b5051919050565b8181038181111561079c5761079c612bc0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7fffff0000000000000000000000000000000000000000000000000000000000008660f01b1681528460028201528360228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b16604282015260008251612fd0816056850160208701612611565b91909101605601969550505050505056fea26469706673582212205aa5f0cd0c461fd17913962c42f0282b08b0b421867bd51d53622eeb1a26654164736f6c63430008130033",
    sourceMap:
      "440:1683:220:-:0;;;537:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;597:8;;;;;-1:-1:-1;;;;;1702:19:52;;;1022:106:117;;;;-1:-1:-1;;;1022:106:117;;669:2:282;1022:106:117;;;651:21:282;708:2;688:18;;;681:30;747:32;727:18;;;720:60;797:18;;1022:106:117;;;;;;;;-1:-1:-1;;;;;1692:28:117;::::1;;::::0;;;1744:21:::1;::::0;;-1:-1:-1;;;1744:21:117;;;;:19:::1;::::0;:21:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;1692:28;1744:21:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1730:35;;;::::0;1775:30:::1;1794:10;1775:18;:30::i;:::-;-1:-1:-1::0;;;617:22:220::1;::::0;;::::1;;::::0;-1:-1:-1;440:1683:220;;-1:-1:-1;;440:1683:220;2666:187:1;2758:6;;;-1:-1:-1;;;;;2774:17:1;;;-1:-1:-1;;;;;;2774:17:1;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;14:448:282:-;91:6;99;152:2;140:9;131:7;127:23;123:32;120:52;;;168:1;165;158:12;120:52;200:9;194:16;250:4;243:5;239:16;232:5;229:27;219:55;;270:1;267;260:12;219:55;343:2;328:18;;322:25;293:5;;-1:-1:-1;;;;;;378:33:282;;366:46;;356:74;;426:1;423;416:12;356:74;449:7;439:17;;;14:448;;;;;:::o;826:280::-;895:6;948:2;936:9;927:7;923:23;919:32;916:52;;;964:1;961;954:12;916:52;996:9;990:16;1046:10;1039:5;1035:22;1028:5;1025:33;1015:61;;1072:1;1069;1062:12;1015:61;1095:5;826:280;-1:-1:-1;;;826:280:282:o;:::-;440:1683:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    linkReferences: {},
  },
  deployedBytecode: {
    object:
      "0x6080604052600436106101fe5760003560e01c80637f5a7c7b1161011d578063b49c53a7116100b0578063e9198bf91161007f578063efae508a11610064578063efae508a14610696578063f2ed8c53146106b6578063f2fde38b146106d657600080fd5b8063e9198bf914610656578063eedfca5f1461067657600080fd5b8063b49c53a714610582578063d5438eae146105a2578063dd62ed3e146105d6578063de523cf31461062957600080fd5b806395d89b41116100ec57806395d89b411461050d578063a457c2d714610522578063a9059cbb14610542578063b1bd64361461056257600080fd5b80637f5a7c7b1461043457806381b4e8b4146104865780638d3638f4146104995780638da5cb5b146104e257600080fd5b80633dfd38731161019557806370a082311161016457806370a08231146103b2578063715018a6146103d257806371a15b38146103e7578063775313a11461040757600080fd5b80633dfd38731461033d578063440df4f41461035d57806349d462ef1461037f57806356d5d4751461039f57600080fd5b806323b872dd116101d157806323b872dd1461029f5780632ead72f6146102bf578063313ce567146102df578063395093511461031d57600080fd5b806306fdde0314610203578063095ea7b31461022e5780630e72cc061461025e57806318160ddd14610280575b600080fd5b34801561020f57600080fd5b506102186106f6565b604051610225919061267f565b60405180910390f35b34801561023a57600080fd5b5061024e6102493660046126bb565b610788565b6040519015158152602001610225565b34801561026a57600080fd5b5061027e6102793660046126e5565b6107a2565b005b34801561028c57600080fd5b506035545b604051908152602001610225565b3480156102ab57600080fd5b5061024e6102ba366004612700565b6108bd565b3480156102cb57600080fd5b506102916102da366004612750565b6108e1565b3480156102eb57600080fd5b5060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610225565b34801561032957600080fd5b5061024e6103383660046126bb565b610900565b34801561034957600080fd5b5061027e6103583660046126e5565b61094c565b34801561036957600080fd5b50610372610a62565b604051610225919061276b565b34801561038b57600080fd5b5061027e61039a3660046127b5565b610a73565b61027e6103ad3660046127d1565b610a99565b3480156103be57600080fd5b506102916103cd3660046126e5565b610c0d565b3480156103de57600080fd5b5061027e610c38565b3480156103f357600080fd5b5061027e61040236600461289d565b610c4c565b34801561041357600080fd5b50610291610422366004612750565b60fc6020526000908152604090205481565b34801561044057600080fd5b506097546104619073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610225565b6102916104943660046128df565b610ca7565b3480156104a557600080fd5b506104cd7f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610225565b3480156104ee57600080fd5b5060655473ffffffffffffffffffffffffffffffffffffffff16610461565b34801561051957600080fd5b50610218610cb5565b34801561052e57600080fd5b5061024e61053d3660046126bb565b610cc4565b34801561054e57600080fd5b5061024e61055d3660046126bb565b610d95565b34801561056e57600080fd5b5061027e61057d366004612912565b610da3565b34801561058e57600080fd5b5061027e61059d3660046127b5565b610e2d565b3480156105ae57600080fd5b506104617f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e257600080fd5b506102916105f1366004612987565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260346020908152604080832093909416825291909152205490565b34801561063557600080fd5b506098546104619073ffffffffffffffffffffffffffffffffffffffff1681565b34801561066257600080fd5b5061027e6106713660046129ba565b610e3f565b34801561068257600080fd5b5061027e610691366004612b00565b610f1e565b3480156106a257600080fd5b5061027e6106b1366004612750565b6110be565b3480156106c257600080fd5b506102916106d1366004612750565b6110d2565b3480156106e257600080fd5b5061027e6106f13660046126e5565b6110ed565b60606036805461070590612b6d565b80601f016020809104026020016040519081016040528092919081815260200182805461073190612b6d565b801561077e5780601f106107535761010080835404028352916020019161077e565b820191906000526020600020905b81548152906001019060200180831161076157829003601f168201915b5050505050905090565b6000336107968185856111a1565b60019150505b92915050565b8073ffffffffffffffffffffffffffffffffffffffff81163b1515806107dc575073ffffffffffffffffffffffffffffffffffffffff8116155b61086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e670000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610875611354565b50609880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000336108cb8582856113d5565b6108d68585856114a6565b506001949350505050565b6000806108f860c963ffffffff8086169061171c16565b949350505050565b33600081815260346020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906107969082908690610947908790612bef565b6111a1565b8073ffffffffffffffffffffffffffffffffffffffff81163b151580610986575073ffffffffffffffffffffffffffffffffffffffff8116155b610a12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201527f73657474696e67000000000000000000000000000000000000000000000000006064820152608401610864565b610a1a611354565b50609780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6060610a6e60c9611735565b905090565b610a7b611354565b63ffffffff91909116600090815260fc6020526040902055565b5050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b5e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f60448201527f78000000000000000000000000000000000000000000000000000000000000006064820152608401610864565b6000610b69856117f0565b9050838114610bfa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201527f656e6465720000000000000000000000000000000000000000000000000000006064820152608401610864565b610c0685858585611856565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526033602052604081205461079c565b610c40611354565b610c4a60006118e0565b565b610c54611354565b8060005b81811015610ca157610c8f848483818110610c7557610c75612c02565b9050602002016020810190610c8a9190612750565b611957565b610c9a600182612bef565b9050610c58565b50505050565b60006108f8848484346119ac565b60606037805461070590612b6d565b33600081815260346020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610d88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610864565b6108d682868684036111a1565b6000336107968185856114a6565b610dab611354565b60005b81811015610e2857610e16838383818110610dcb57610dcb612c02565b610de19260206040909202019081019150612750565b848484818110610df357610df3612c02565b9050604002016020013563ffffffff909116600090815260fc6020526040902055565b610e21600182612bef565b9050610dae565b505050565b610e35611354565b610a958282611a1b565b610e47611354565b828114610eb0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f216c656e677468000000000000000000000000000000000000000000000000006044820152606401610864565b8260005b81811015610f1657610f04868683818110610ed157610ed1612c02565b9050602002016020810190610ee69190612750565b858584818110610ef857610ef8612c02565b90506020020135611a1b565b610f0f600182612bef565b9050610eb4565b505050505050565b600054610100900460ff1615808015610f3e5750600054600160ff909116105b80610f585750303b158015610f58575060005460ff166001145b610fe4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610864565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561104257600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b61104c8383611a31565b6110563385611ad2565b8015610ca157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6110c6611354565b6110cf81611957565b50565b600061079c8260405180602001604052806000815250611bc7565b6110f5611354565b73ffffffffffffffffffffffffffffffffffffffff8116611198576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610864565b6110cf816118e0565b73ffffffffffffffffffffffffffffffffffffffff8316611243576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff82166112e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60655473ffffffffffffffffffffffffffffffffffffffff163314610c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610864565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152603460209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ca15781811015611499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610864565b610ca184848484036111a1565b73ffffffffffffffffffffffffffffffffffffffff8316611549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff82166115ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260336020526040902054818110156116a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff80851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061170f9086815260200190565b60405180910390a3610ca1565b6000806117298484611be0565b915091505b9250929050565b6060600061174283611c1a565b9050805167ffffffffffffffff81111561175e5761175e612a26565b604051908082528060200260200182016040528015611787578160200160208202803683370190505b50915060005b81518110156117e9578181815181106117a8576117a8612c02565b60200260200101518382815181106117c2576117c2612c02565b63ffffffff90921660209283029190910190910152806117e181612c31565b91505061178d565b5050919050565b6000808061180860c963ffffffff8087169061171c16565b915091508161181685611cb5565b9061184e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864919061267f565b509392505050565b60006118628383611cec565b905060006118708484611d0b565b905036600061187f8686611d1b565b9150915061189561188d8590565b848484611d2b565b838863ffffffff167fba20947a325f450d232530e5f5fce293e7963499d5309a07cee84a269f2f15a6856040516118ce91815260200190565b60405180910390a35050505050505050565b6065805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61196b60c963ffffffff80841690611d3516565b61197482611cb5565b90610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864919061267f565b6000806119b884611d41565b90506119cf86846119ca888886611d61565b611d90565b9150848663ffffffff167fd229aacb94204188fe8042965fa6b269c62dc5818b21238779ab64bdd17efeec86604051611a0a91815260200190565b60405180910390a350949350505050565b610a9560c963ffffffff808516908490611db316565b600054610100900460ff16611ac8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610864565b610a958282611dbe565b73ffffffffffffffffffffffffffffffffffffffff8216611b4f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610864565b8060356000828254611b619190612bef565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600080611bd3846117f0565b90506108f8848285611e6e565b6000818152600283016020526040812054819080611c0f57611c028585611f4f565b92506000915061172e9050565b60019250905061172e565b60606000611c2783611f5b565b90508067ffffffffffffffff811115611c4257611c42612a26565b604051908082528060200260200182016040528015611c6b578160200160208202803683370190505b50915060005b818110156117e957611c838482611f66565b60001c838281518110611c9857611c98612c02565b602090810291909101015280611cad81612c31565b915050611c71565b6060611cc68263ffffffff16611f72565b604051602001611cd69190612c69565b6040516020818303038152906040529050919050565b6000611cfb6020828486612cae565b611d0491612cd8565b9392505050565b6000611cfb604060208486612cae565b3660006117298360408187612cae565b610ca18484611ad2565b6000611d048383612030565b6060611d4d338361204d565b505060408051602081019091526000815290565b6060838383604051602001611d7893929190612d14565b60405160208183030381529060405290509392505050565b600080611d9c856117f0565b9050611daa85828686612213565b95945050505050565b610ca18383836122f7565b600054610100900460ff16611e55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610864565b6036611e618382612d87565b506037610e288282612d87565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166381d2ea95858585611eb889612314565b6097546040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b168152611f0e959493929173ffffffffffffffffffffffffffffffffffffffff1690600401612ea1565b602060405180830381865afa158015611f2b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190612f01565b6000611d048383612336565b600061079c8261234e565b6000611d048383612358565b60606000611f7f83612382565b600101905060008167ffffffffffffffff811115611f9f57611f9f612a26565b6040519080825280601f01601f191660200182016040528015611fc9576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084611fd357509392505050565b60008181526002830160205260408120819055611d048383612464565b73ffffffffffffffffffffffffffffffffffffffff82166120f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260336020526040902054818110156121a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610864565b73ffffffffffffffffffffffffffffffffffffffff831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166310b83dc08487878661225e8b612314565b6097546040517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1681526122b4959493929173ffffffffffffffffffffffffffffffffffffffff1690600401612ea1565b60206040518083038185885af11580156122d2573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611daa9190612f01565b600082815260028401602052604081208290556108f88484612470565b63ffffffff8116600090815260fc602052604090205460609061079c9061247c565b60008181526001830160205260408120541515611d04565b600061079c825490565b600082600001828154811061236f5761236f612c02565b9060005260206000200154905092915050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106123cb577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106123f7576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061241557662386f26fc10000830492506010015b6305f5e100831061242d576305f5e100830492506008015b612710831061244157612710830492506004015b60648310612453576064830492506002015b600a831061079c5760010192915050565b6000611d04838361249a565b6000611d04838361258d565b606061079c60008333604051806020016040528060008152506125dc565b600081815260018301602052604081205480156125835760006124be600183612f1a565b85549091506000906124d290600190612f1a565b90508181146125375760008660000182815481106124f2576124f2612c02565b906000526020600020015490508087600001848154811061251557612515612c02565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061254857612548612f2d565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061079c565b600091505061079c565b60008181526001830160205260408120546125d45750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561079c565b50600061079c565b60606001858585856040516020016125f8959493929190612f5c565b6040516020818303038152906040529050949350505050565b60005b8381101561262c578181015183820152602001612614565b50506000910152565b6000815180845261264d816020860160208601612611565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611d046020830184612635565b803573ffffffffffffffffffffffffffffffffffffffff811681146126b657600080fd5b919050565b600080604083850312156126ce57600080fd5b6126d783612692565b946020939093013593505050565b6000602082840312156126f757600080fd5b611d0482612692565b60008060006060848603121561271557600080fd5b61271e84612692565b925061272c60208501612692565b9150604084013590509250925092565b803563ffffffff811681146126b657600080fd5b60006020828403121561276257600080fd5b611d048261273c565b6020808252825182820181905260009190848201906040850190845b818110156127a957835163ffffffff1683529284019291840191600101612787565b50909695505050505050565b600080604083850312156127c857600080fd5b6126d78361273c565b600080600080606085870312156127e757600080fd5b6127f08561273c565b935060208501359250604085013567ffffffffffffffff8082111561281457600080fd5b818701915087601f83011261282857600080fd5b81358181111561283757600080fd5b88602082850101111561284957600080fd5b95989497505060200194505050565b60008083601f84011261286a57600080fd5b50813567ffffffffffffffff81111561288257600080fd5b6020830191508360208260051b850101111561172e57600080fd5b600080602083850312156128b057600080fd5b823567ffffffffffffffff8111156128c757600080fd5b6128d385828601612858565b90969095509350505050565b6000806000606084860312156128f457600080fd5b6128fd8461273c565b95602085013595506040909401359392505050565b6000806020838503121561292557600080fd5b823567ffffffffffffffff8082111561293d57600080fd5b818501915085601f83011261295157600080fd5b81358181111561296057600080fd5b8660208260061b850101111561297557600080fd5b60209290920196919550909350505050565b6000806040838503121561299a57600080fd5b6129a383612692565b91506129b160208401612692565b90509250929050565b600080600080604085870312156129d057600080fd5b843567ffffffffffffffff808211156129e857600080fd5b6129f488838901612858565b90965094506020870135915080821115612a0d57600080fd5b50612a1a87828801612858565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112612a6657600080fd5b813567ffffffffffffffff80821115612a8157612a81612a26565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715612ac757612ac7612a26565b81604052838152866020858801011115612ae057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215612b1557600080fd5b83359250602084013567ffffffffffffffff80821115612b3457600080fd5b612b4087838801612a55565b93506040860135915080821115612b5657600080fd5b50612b6386828701612a55565b9150509250925092565b600181811c90821680612b8157607f821691505b602082108103612bba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8082018082111561079c5761079c612bc0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c6257612c62612bc0565b5060010190565b7f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a2000815260008251612ca181601f850160208701612611565b91909101601f0192915050565b60008085851115612cbe57600080fd5b83861115612ccb57600080fd5b5050820193919092039150565b8035602083101561079c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b83815282602082015260008251612d32816040850160208701612611565b91909101604001949350505050565b601f821115610e2857600081815260208120601f850160051c81016020861015612d685750805b601f850160051c820191505b81811015610f1657828155600101612d74565b815167ffffffffffffffff811115612da157612da1612a26565b612db581612daf8454612b6d565b84612d41565b602080601f831160018114612e085760008415612dd25750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610f16565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015612e5557888601518255948401946001909101908401612e36565b5085821015612e9157878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b63ffffffff8616815284602082015260a060408201526000612ec660a0830186612635565b8281036060840152612ed88186612635565b91505073ffffffffffffffffffffffffffffffffffffffff831660808301529695505050505050565b600060208284031215612f1357600080fd5b5051919050565b8181038181111561079c5761079c612bc0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7fffff0000000000000000000000000000000000000000000000000000000000008660f01b1681528460028201528360228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b16604282015260008251612fd0816056850160208701612611565b91909101605601969550505050505056fea26469706673582212205aa5f0cd0c461fd17913962c42f0282b08b0b421867bd51d53622eeb1a26654164736f6c63430008130033",
    sourceMap:
      "440:1683:220:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4781:197;;;;;;;;;;-1:-1:-1;4781:197:6;;;;;:::i;:::-;;:::i;:::-;;;1454:14:282;;1447:22;1429:41;;1417:2;1402:18;4781:197:6;1289:187:282;2265:191:117;;;;;;;;;;-1:-1:-1;2265:191:117;;;;;:::i;:::-;;:::i;:::-;;3592:106:6;;;;;;;;;;-1:-1:-1;3679:12:6;;3592:106;;;1818:25:282;;;1806:2;1791:18;3592:106:6;1672:177:282;5540:256:6;;;;;;;;;;-1:-1:-1;5540:256:6;;;;;:::i;:::-;;:::i;1454:158:118:-;;;;;;;;;;-1:-1:-1;1454:158:118;;;;;:::i;:::-;;:::i;1187:90:220:-;;;;;;;;;;-1:-1:-1;1187:90:220;;2898:4:282;1261:9:220;2886:17:282;2868:36;;2856:2;2841:18;1187:90:220;2726:184:282;6191:234:6;;;;;;;;;;-1:-1:-1;6191:234:6;;;;;:::i;:::-;;:::i;1954:123:117:-;;;;;;;;;;-1:-1:-1;1954:123:117;;;;;:::i;:::-;;:::i;1051:104:118:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1048:122:116:-;;;;;;;;;;-1:-1:-1;1048:122:116;;;;;:::i;:::-;;:::i;3450:338:118:-;;;;;;:::i;:::-;;:::i;1283:233:220:-;;;;;;;;;;-1:-1:-1;1283:233:220;;;;;:::i;:::-;;:::i;2064:101:1:-;;;;;;;;;;;;;:::i;3012:257:118:-;;;;;;;;;;-1:-1:-1;3012:257:118;;;;;:::i;:::-;;:::i;281:48:116:-;;;;;;;;;;-1:-1:-1;281:48:116;;;;;:::i;:::-;;;;;;;;;;;;;;770:29:117;;;;;;;;;;-1:-1:-1;770:29:117;;;;;;;;;;;5574:42:282;5562:55;;;5544:74;;5532:2;5517:18;770:29:117;5371:253:282;2072:270:232;;;;;;:::i;:::-;;:::i;728:35:117:-;;;;;;;;;;;;;;;;;;6128:10:282;6116:23;;;6098:42;;6086:2;6071:18;728:35:117;5954:192:282;1441:85:1;;;;;;;;;;-1:-1:-1;1513:6:1;;;;1441:85;;2706:102:6;;;;;;;;;;;;;:::i;6912:427::-;;;;;;;;;;-1:-1:-1;6912:427:6;;;;;:::i;:::-;;:::i;4077:189::-;;;;;;;;;;-1:-1:-1;4077:189:6;;;;;:::i;:::-;;:::i;623:250:116:-;;;;;;;;;;-1:-1:-1;623:250:116;;;;;:::i;:::-;;:::i;2112:164:118:-;;;;;;;;;;-1:-1:-1;2112:164:118;;;;;:::i;:::-;;:::i;688:33:117:-;;;;;;;;;;;;;;;4324:149:6;;;;;;;;;;-1:-1:-1;4324:149:6;;;;;:::i;:::-;4439:18;;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149;806:57:117;;;;;;;;;;-1:-1:-1;806:57:117;;;;;;;;2493:373:118;;;;;;;;;;-1:-1:-1;2493:373:118;;;;;:::i;:::-;;:::i;921:260:220:-;;;;;;;;;;-1:-1:-1;921:260:220;;;;;:::i;:::-;;:::i;1737:120:118:-;;;;;;;;;;-1:-1:-1;1737:120:118;;;;;:::i;:::-;;:::i;1437:172:116:-;;;;;;;;;;-1:-1:-1;1437:172:116;;;;;:::i;:::-;;:::i;2314:198:1:-;;;;;;;;;;-1:-1:-1;2314:198:1;;;;;:::i;:::-;;:::i;2495:98:6:-;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;4781:197::-;4864:4;929:10:17;4918:32:6;929:10:17;4934:7:6;4943:6;4918:8;:32::i;:::-;4967:4;4960:11;;;4781:197;;;;;:::o;2265:191:117:-;2359:7;1702:19:52;;;;:23;;1230:56:117;;;-1:-1:-1;1263:23:117;;;;1230:56;1209:142;;;;;;;11082:2:282;1209:142:117;;;11064:21:282;11121:2;11101:18;;;11094:30;11160:34;11140:18;;;11133:62;11231:9;11211:18;;;11204:37;11258:19;;1209:142:117;;;;;;;;;1334:13:1::1;:11;:13::i;:::-;-1:-1:-1::0;2388:24:117::2;:61:::0;;;::::2;;::::0;;;::::2;::::0;;;::::2;::::0;;2265:191::o;5540:256:6:-;5637:4;929:10:17;5693:38:6;5709:4;929:10:17;5724:6:6;5693:15;:38::i;:::-;5741:27;5751:4;5757:2;5761:6;5741:9;:27::i;:::-;-1:-1:-1;5785:4:6;;5540:256;-1:-1:-1;;;;5540:256:6:o;1454:158:118:-;1516:7;;1557:24;:8;:24;;;;;:15;:24;:::i;:::-;1535:46;1454:158;-1:-1:-1;;;;1454:158:118:o;6191:234:6:-;929:10:17;6279:4:6;4439:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6279:4;;929:10:17;6333:64:6;;929:10:17;;4439:27:6;;6358:38;;6386:10;;6358:38;:::i;:::-;6333:8;:64::i;1954:123:117:-;2012:5;1702:19:52;;;;:23;;1230:56:117;;;-1:-1:-1;1263:23:117;;;;1230:56;1209:142;;;;;;;11082:2:282;1209:142:117;;;11064:21:282;11121:2;11101:18;;;11094:30;11160:34;11140:18;;;11133:62;11231:9;11211:18;;;11204:37;11258:19;;1209:142:117;10880:403:282;1209:142:117;1334:13:1::1;:11;:13::i;:::-;-1:-1:-1::0;2039:4:117::2;:31:::0;;;::::2;;::::0;;;::::2;::::0;;;::::2;::::0;;1954:123::o;1051:104:118:-;1093:15;1127:21;:8;:19;:21::i;:::-;1120:28;;1051:104;:::o;1048:122:116:-;1334:13:1;:11;:13::i;:::-;1907:22:116;;;;;;;;;:14;:22;;;;;:28;1048:122::o;1132:31::-:1;1048:122:::0;;:::o;3450:338:118:-;1516:10:117;:30;1538:7;1516:30;;1495:110;;;;;;;11809:2:282;1495:110:117;;;11791:21:282;11848:2;11828:18;;;11821:30;11887:34;11867:18;;;11860:62;11958:3;11938:18;;;11931:31;11979:19;;1495:110:117;11607:397:282;1495:110:117;3610:15:118::1;3628:30;3650:7;3628:21;:30::i;:::-;3610:48;;3687:7;3676;:18;3668:68;;;::::0;::::1;::::0;;12211:2:282;3668:68:118::1;::::0;::::1;12193:21:282::0;12250:2;12230:18;;;12223:30;12289:34;12269:18;;;12262:62;12360:7;12340:18;;;12333:35;12385:19;;3668:68:118::1;12009:401:282::0;3668:68:118::1;3746:35;3754:7;3763;3772:8;;3746:7;:35::i;:::-;3600:188;3450:338:::0;;;;:::o;1283:233:220:-;3856:18:6;;;1443:7:220;3856:18:6;;;:9;:18;;;;;;1473:36:220;3756:125:6;2064:101:1;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;3012:257:118:-;1334:13:1;:11;:13::i;:::-;3139:8:118;3122:14:::1;3164:99;3188:6;3184:1;:10;3164:99;;;3218:34;3240:8;;3249:1;3240:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3218:21;:34::i;:::-;3196:6;3201:1;3196:6:::0;::::1;:::i;:::-;;;3164:99;;;;3112:157;3012:257:::0;;:::o;2072:270:232:-;2222:17;2270:65;2286:12;2300:10;2312:11;2325:9;2270:15;:65::i;2706:102:6:-;2762:13;2794:7;2787:14;;;;;:::i;6912:427::-;929:10:17;7005:4:6;4439:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;7005:4;;929:10:17;7149:15:6;7129:16;:35;;7121:85;;;;;;;12806:2:282;7121:85:6;;;12788:21:282;12845:2;12825:18;;;12818:30;12884:34;12864:18;;;12857:62;12955:7;12935:18;;;12928:35;12980:19;;7121:85:6;12604:401:282;7121:85:6;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;4077:189::-;4156:4;929:10:17;4210:28:6;929:10:17;4227:2:6;4231:6;4210:9;:28::i;623:250:116:-;1334:13:1;:11;:13::i;:::-;737:9:116::1;732:135;752:21:::0;;::::1;732:135;;;797:59;816:10;;827:1;816:13;;;;;;;:::i;:::-;:20;::::0;::::1;:13;::::0;;::::1;;:20:::0;;::::1;::::0;-1:-1:-1;816:20:116::1;:::i;:::-;838:10;;849:1;838:13;;;;;;;:::i;:::-;;;;;;:17;;;1907:22:::0;;;;;;;;:14;:22;;;;;:28;1832:110;797:59:::1;775:6;780:1;775:6:::0;::::1;:::i;:::-;;;732:135;;;;623:250:::0;;:::o;2112:164:118:-;1334:13:1;:11;:13::i;:::-;2232:37:118::1;2252:7;2261;2232:19;:37::i;2493:373::-:0;1334:13:1;:11;:13::i;:::-;2648:36:118;;::::1;2640:56;;;::::0;::::1;::::0;;13212:2:282;2640:56:118::1;::::0;::::1;13194:21:282::0;13251:1;13231:18;;;13224:29;13289:9;13269:18;;;13262:37;13316:18;;2640:56:118::1;13010:330:282::0;2640:56:118::1;2723:8:::0;2706:14:::1;2748:112;2772:6;2768:1;:10;2748:112;;;2802:47;2822:8;;2831:1;2822:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2835:10;;2846:1;2835:13;;;;;;;:::i;:::-;;;;;;;2802:19;:47::i;:::-;2780:6;2785:1;2780:6:::0;::::1;:::i;:::-;;;2748:112;;;;2630:236;2493:373:::0;;;;:::o;921:260:220:-;3279:19:5;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:5;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:5;1702:19:52;:23;;;3387:66:5;;-1:-1:-1;3436:12:5;;;;;:17;3387:66;3325:201;;;;;;;13547:2:282;3325:201:5;;;13529:21:282;13586:2;13566:18;;;13559:30;13625:34;13605:18;;;13598:62;13696:16;13676:18;;;13669:44;13730:19;;3325:201:5;13345:410:282;3325:201:5;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;1105:28:220::1;1118:5;1125:7;1105:12;:28::i;:::-;1143:31;1149:10;1161:12;1143:5;:31::i;:::-;3651:14:5::0;3647:99;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;2868:36:282;;3721:14:5;;2856:2:282;2841:18;3721:14:5;;;;;;;3269:483;921:260:220;;;:::o;1737:120:118:-;1334:13:1;:11;:13::i;:::-;1820:30:118::1;1842:7;1820:21;:30::i;:::-;1737:120:::0;:::o;1437:172:116:-;1526:19;1564:38;1579:18;1564:38;;;;;;;;;;;;:14;:38::i;2314:198:1:-;1334:13;:11;:13::i;:::-;2402:22:::1;::::0;::::1;2394:73;;;::::0;::::1;::::0;;14161:2:282;2394:73:1::1;::::0;::::1;14143:21:282::0;14200:2;14180:18;;;14173:30;14239:34;14219:18;;;14212:62;14310:8;14290:18;;;14283:36;14336:19;;2394:73:1::1;13959:402:282::0;2394:73:1::1;2477:28;2496:8;2477:18;:28::i;10794:340:6:-:0;10895:19;;;10887:68;;;;;;;14568:2:282;10887:68:6;;;14550:21:282;14607:2;14587:18;;;14580:30;14646:34;14626:18;;;14619:62;14717:6;14697:18;;;14690:34;14741:19;;10887:68:6;14366:400:282;10887:68:6;10973:21;;;10965:68;;;;;;;14973:2:282;10965:68:6;;;14955:21:282;15012:2;14992:18;;;14985:30;15051:34;15031:18;;;15024:62;15122:4;15102:18;;;15095:32;15144:19;;10965:68:6;14771:398:282;10965:68:6;11044:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;1818:25:282;;;11095:32:6;;1791:18:282;11095:32:6;;;;;;;10794:340;;;:::o;1599:130:1:-;1513:6;;1662:23;1513:6;929:10:17;1662:23:1;1654:68;;;;;;;15376:2:282;1654:68:1;;;15358:21:282;;;15395:18;;;15388:30;15454:34;15434:18;;;15427:62;15506:18;;1654:68:1;15174:356:282;11415:411:6;4439:18;;;;11515:24;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;11601:17;11581:37;;11577:243;;11662:6;11642:16;:26;;11634:68;;;;;;;15737:2:282;11634:68:6;;;15719:21:282;15776:2;15756:18;;;15749:30;15815:31;15795:18;;;15788:59;15864:18;;11634:68:6;15535:353:282;11634:68:6;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;7793:788::-;7889:18;;;7881:68;;;;;;;16095:2:282;7881:68:6;;;16077:21:282;16134:2;16114:18;;;16107:30;16173:34;16153:18;;;16146:62;16244:7;16224:18;;;16217:35;16269:19;;7881:68:6;15893:401:282;7881:68:6;7967:16;;;7959:64;;;;;;;16501:2:282;7959:64:6;;;16483:21:282;16540:2;16520:18;;;16513:30;16579:34;16559:18;;;16552:62;16650:5;16630:18;;;16623:33;16673:19;;7959:64:6;16299:399:282;7959:64:6;8105:15;;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;;;;16905:2:282;8130:72:6;;;16887:21:282;16944:2;16924:18;;;16917:30;16983:34;16963:18;;;16956:62;17054:8;17034:18;;;17027:36;17080:19;;8130:72:6;16703:402:282;8130:72:6;8236:15;;;;;;;;:9;:15;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;;;;;8268:6;1818:25:282;;1806:2;1791:18;;1672:177;8500:26:6;;;;;;;;8537:37;623:250:116;1719:174:173;1823:4;;1855:31;:3;1881;1855:17;:31::i;:::-;1848:38;;;;1719:174;;;;;;:::o;1044:333::-;1131:21;1164:28;1195:9;1200:3;1195:4;:9::i;:::-;1164:40;;1235:11;:18;1222:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1222:32:173;;1214:40;;1269:9;1264:107;1288:11;:18;1284:1;:22;1264:107;;;1345:11;1357:1;1345:14;;;;;;;;:::i;:::-;;;;;;;1327:5;1333:1;1327:8;;;;;;;;:::i;:::-;:33;;;;:8;;;;;;;;;;;:33;1308:3;;;;:::i;:::-;;;;1264:107;;;;1154:223;1044:333;;;:::o;5294:253:118:-;5378:7;;;5433:24;:8;:24;;;;;:15;:24;:::i;:::-;5397:60;;;;5475:9;5486:29;5507:7;5486:20;:29::i;:::-;5467:49;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5533:7:118;5294:253;-1:-1:-1;;;5294:253:118:o;4461:413:232:-;4594:17;4614:20;:8;;:18;:20::i;:::-;4594:40;;4644:14;4661:17;:8;;:15;:17::i;:::-;4644:34;;4688:23;;4714:19;:8;;:17;:19::i;:::-;4688:45;;;;4743:59;4755:28;:9;411:4:181;298:127;4755:28:232;4785:6;4793:8;;4743:11;:59::i;:::-;4849:9;4840:7;4817:50;;;4860:6;4817:50;;;;1818:25:282;;1806:2;1791:18;;1672:177;4817:50:232;;;;;;;;4584:290;;;;4461:413;;;;:::o;2666:187:1:-;2758:6;;;;2774:17;;;;;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;4419:145:118:-;4501:24;:8;:24;;;;;:15;:24;:::i;:::-;4527:29;4548:7;4527:20;:29::i;:::-;4493:64;;;;;;;;;;;;;;:::i;2987:488:232:-;3151:17;3180:21;3204:32;3224:11;3204:19;:32::i;:::-;3180:56;;3258:138;3281:12;3307:11;3332:54;3352:10;3364:11;3377:8;3332:19;:54::i;:::-;3258:9;:138::i;:::-;3246:150;;3444:10;3430:12;3411:57;;;3456:11;3411:57;;;;1818:25:282;;1806:2;1791:18;;1672:177;3411:57:232;;;;;;;;3170:305;2987:488;;;;;;:::o;4162:150:118:-;4274:31;:8;:31;;;;;4296:8;;4274:12;:31;:::i;2118:147:6:-;5374:13:5;;;;;;;5366:69;;;;;;;17512:2:282;5366:69:5;;;17494:21:282;17551:2;17531:18;;;17524:30;17590:34;17570:18;;;17563:62;17661:13;17641:18;;;17634:41;17692:19;;5366:69:5;17310:407:282;5366:69:5;2220:38:6::1;2243:5;2250:7;2220:22;:38::i;8857:535::-:0;8940:21;;;8932:65;;;;;;;17924:2:282;8932:65:6;;;17906:21:282;17963:2;17943:18;;;17936:30;18002:33;17982:18;;;17975:61;18053:18;;8932:65:6;17722:355:282;8932:65:6;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;9236:18:6;;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;1818:25:282;;;9289:37:6;;1791:18:282;9289:37:6;;;;;;;1048:122:116;;:::o;6352:296:118:-;6483:7;6502:15;6520:41;6542:18;6520:21;:41::i;:::-;6502:59;;6578:63;6599:18;6619:7;6628:12;6578:20;:63::i;4166:298:62:-;4251:4;4292:16;;;:11;;;:16;;;;;;4251:4;;4292:16;4318:140;;4365:18;4374:3;4379;4365:8;:18::i;:::-;4357:39;-1:-1:-1;4393:1:62;;-1:-1:-1;4357:39:62;;-1:-1:-1;4357:39:62;4318:140;4435:4;;-1:-1:-1;4441:5:62;-1:-1:-1;4427:20:62;;725:313:173;806:22;840:15;858:19;:3;:17;:19::i;:::-;840:37;;909:7;895:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:22:173;;887:30;;932:9;927:105;951:7;947:1;:11;927:105;;;998:22;:3;1018:1;998:19;:22::i;:::-;990:31;;979:5;985:1;979:8;;;;;;;;:::i;:::-;;;;;;;;;;:42;960:3;;;;:::i;:::-;;;;927:105;;5553:248:118;5636:13;5762:18;:7;:16;;;:18::i;:::-;5680:114;;;;;;;;:::i;:::-;;;;;;;;;;;;;5661:133;;5553:248;;;:::o;321:121:231:-;387:7;421:13;431:2;387:7;421;;:13;:::i;:::-;413:22;;;:::i;:::-;406:29;321:121;-1:-1:-1;;;321:121:231:o;448:128::-;511:7;553:14;564:2;561;553:7;;:14;:::i;724:131::-;803:14;;836:12;:7;844:2;836:7;;:12;:::i;1933:188:220:-;2088:26;2094:10;2106:7;2088:5;:26::i;1899:160:173:-;1998:4;2021:31;:3;2047;2021:17;:31::i;1633:185:220:-;1720:12;1744:26;1750:10;1762:7;1744:5;:26::i;:::-;-1:-1:-1;;1787:9:220;;;;;;;;;-1:-1:-1;1787:9:220;;;1633:185::o;99:216:231:-;229:12;277:10;289:7;298:9;260:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;253:55;;99:216;;;;;:::o;6021:325:118:-;6166:7;6185:15;6203:41;6225:18;6203:21;:41::i;:::-;6185:59;;6273:66;6289:18;6309:7;6318:6;6326:12;6273:15;:66::i;:::-;6254:85;6021:325;-1:-1:-1;;;;;6021:325:118:o;1383:162:173:-;1503:35;:3;1526;1532:5;1503:14;:35::i;2271:159:6:-;5374:13:5;;;;;;;5366:69;;;;;;;17512:2:282;5366:69:5;;;17494:21:282;17551:2;17531:18;;;17524:30;17590:34;17570:18;;;17563:62;17661:13;17641:18;;;17634:41;17692:19;;5366:69:5;17310:407:282;5366:69:5;2383:5:6::1;:13;2391:5:::0;2383;:13:::1;:::i;:::-;-1:-1:-1::0;2406:7:6::1;:17;2416:7:::0;2406;:17:::1;:::i;3793:402:117:-:0;3952:7;3990;:21;;;4029:18;4065:10;4093:12;4123:29;4133:18;4123:9;:29::i;:::-;4170:4;;3990:198;;;;;;;;;;;;;;;;4170:4;;;3990:198;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3128:140:62:-;3215:4;3238:23;:3;3257;3238:18;:23::i;3358:123::-;3430:7;3456:18;:3;:16;:18::i;7096:129:63:-;7170:7;7196:22;7200:3;7212:5;7196:3;:22::i;447:696:56:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:56;-1:-1:-1;604:41:56;-1:-1:-1;765:28:56;;;781:2;765:28;820:280;851:5;;990:8;985:2;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:56;820:280;1064:21;-1:-1:-1;1120:6:56;447:696;-1:-1:-1;;;447:696:56:o;2885:164:62:-;2965:4;2988:16;;;:11;;;:16;;;;;2981:23;;;3021:21;2988:3;3000;3021:16;:21::i;9712:659:6:-;9795:21;;;9787:67;;;;;;;23279:2:282;9787:67:6;;;23261:21:282;23318:2;23298:18;;;23291:30;23357:34;23337:18;;;23330:62;23428:3;23408:18;;;23401:31;23449:19;;9787:67:6;23077:397:282;9787:67:6;9950:18;;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;;;;23681:2:282;9978:71:6;;;23663:21:282;23720:2;23700:18;;;23693:30;23759:34;23739:18;;;23732:62;23830:4;23810:18;;;23803:32;23852:19;;9978:71:6;23479:398:282;9978:71:6;10083:18;;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;1818:25:282;;;10083:18:6;;;10268:37;;1791:18:282;10268:37:6;;;;;;;732:135:116::1;623:250:::0;;:::o;3361:426:117:-;3534:7;3572;:16;;;3596:6;3621:18;3657:10;3685:12;3715:29;3725:18;3715:9;:29::i;:::-;3762:4;;3572:208;;;;;;;;;;;;;;;;3762:4;;;3572:208;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2543:174:62:-;2635:4;2651:16;;;:11;;;:16;;;;;:24;;;2692:18;2651:3;2663;2692:13;:18::i;1615:211:116:-;1790:28;;;;;;;:14;:28;;;;;;1709:12;;1752:67;;:37;:67::i;6420:138:63:-;6500:4;4351:19;;;:12;;;:19;;;;;;:24;;6523:28;4255:127;6639:115;6702:7;6728:19;6736:3;4545:18;;4463:107;4912:118;4979:7;5005:3;:11;;5017:5;5005:18;;;;;;;;:::i;:::-;;;;;;;;;4998:25;;4912:118;;;;:::o;10139:916:60:-;10192:7;;10276:8;10267:17;;10263:103;;10313:8;10304:17;;;-1:-1:-1;10349:2:60;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:60;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:60;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:60;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:60;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:60;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:60:o;6210:129:63:-;6283:4;6306:26;6314:3;6326:5;6306:7;:26::i;5919:123::-;5989:4;6012:23;6017:3;6029:5;6012:4;:23::i;4969:173:130:-;5051:12;5082:53;5105:1;5109:9;5120:10;5082:53;;;;;;;;;;;;:14;:53::i;2786:1388:63:-;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:63;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;2214:404;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:63;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:63;2589:12;;3957:401:130;4134:12;1025:1;4236:9;4263;4290:14;4322:15;4177:174;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4158:193;;3957:401;;;;;;:::o;14:250:282:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:282;238:16;;231:27;14:250::o;269:330::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;513:2;501:15;518:66;497:88;488:98;;;;588:4;484:109;;269:330;-1:-1:-1;;269:330:282:o;604:220::-;753:2;742:9;735:21;716:4;773:45;814:2;803:9;799:18;791:6;773:45;:::i;829:196::-;897:20;;957:42;946:54;;936:65;;926:93;;1015:1;1012;1005:12;926:93;829:196;;;:::o;1030:254::-;1098:6;1106;1159:2;1147:9;1138:7;1134:23;1130:32;1127:52;;;1175:1;1172;1165:12;1127:52;1198:29;1217:9;1198:29;:::i;:::-;1188:39;1274:2;1259:18;;;;1246:32;;-1:-1:-1;;;1030:254:282:o;1481:186::-;1540:6;1593:2;1581:9;1572:7;1568:23;1564:32;1561:52;;;1609:1;1606;1599:12;1561:52;1632:29;1651:9;1632:29;:::i;1854:328::-;1931:6;1939;1947;2000:2;1988:9;1979:7;1975:23;1971:32;1968:52;;;2016:1;2013;2006:12;1968:52;2039:29;2058:9;2039:29;:::i;:::-;2029:39;;2087:38;2121:2;2110:9;2106:18;2087:38;:::i;:::-;2077:48;;2172:2;2161:9;2157:18;2144:32;2134:42;;1854:328;;;;;:::o;2187:163::-;2254:20;;2314:10;2303:22;;2293:33;;2283:61;;2340:1;2337;2330:12;2355:184;2413:6;2466:2;2454:9;2445:7;2441:23;2437:32;2434:52;;;2482:1;2479;2472:12;2434:52;2505:28;2523:9;2505:28;:::i;2915:647::-;3084:2;3136:21;;;3206:13;;3109:18;;;3228:22;;;3055:4;;3084:2;3307:15;;;;3281:2;3266:18;;;3055:4;3350:186;3364:6;3361:1;3358:13;3350:186;;;3429:13;;3444:10;3425:30;3413:43;;3511:15;;;;3476:12;;;;3386:1;3379:9;3350:186;;;-1:-1:-1;3553:3:282;;2915:647;-1:-1:-1;;;;;;2915:647:282:o;3567:252::-;3634:6;3642;3695:2;3683:9;3674:7;3670:23;3666:32;3663:52;;;3711:1;3708;3701:12;3663:52;3734:28;3752:9;3734:28;:::i;3824:731::-;3911:6;3919;3927;3935;3988:2;3976:9;3967:7;3963:23;3959:32;3956:52;;;4004:1;4001;3994:12;3956:52;4027:28;4045:9;4027:28;:::i;:::-;4017:38;;4102:2;4091:9;4087:18;4074:32;4064:42;;4157:2;4146:9;4142:18;4129:32;4180:18;4221:2;4213:6;4210:14;4207:34;;;4237:1;4234;4227:12;4207:34;4275:6;4264:9;4260:22;4250:32;;4320:7;4313:4;4309:2;4305:13;4301:27;4291:55;;4342:1;4339;4332:12;4291:55;4382:2;4369:16;4408:2;4400:6;4397:14;4394:34;;;4424:1;4421;4414:12;4394:34;4469:7;4464:2;4455:6;4451:2;4447:15;4443:24;4440:37;4437:57;;;4490:1;4487;4480:12;4437:57;3824:731;;;;-1:-1:-1;;4521:2:282;4513:11;;-1:-1:-1;;;3824:731:282:o;4560:366::-;4622:8;4632:6;4686:3;4679:4;4671:6;4667:17;4663:27;4653:55;;4704:1;4701;4694:12;4653:55;-1:-1:-1;4727:20:282;;4770:18;4759:30;;4756:50;;;4802:1;4799;4792:12;4756:50;4839:4;4831:6;4827:17;4815:29;;4899:3;4892:4;4882:6;4879:1;4875:14;4867:6;4863:27;4859:38;4856:47;4853:67;;;4916:1;4913;4906:12;4931:435;5016:6;5024;5077:2;5065:9;5056:7;5052:23;5048:32;5045:52;;;5093:1;5090;5083:12;5045:52;5133:9;5120:23;5166:18;5158:6;5155:30;5152:50;;;5198:1;5195;5188:12;5152:50;5237:69;5298:7;5289:6;5278:9;5274:22;5237:69;:::i;:::-;5325:8;;5211:95;;-1:-1:-1;4931:435:282;-1:-1:-1;;;;4931:435:282:o;5629:320::-;5705:6;5713;5721;5774:2;5762:9;5753:7;5749:23;5745:32;5742:52;;;5790:1;5787;5780:12;5742:52;5813:28;5831:9;5813:28;:::i;:::-;5803:38;5888:2;5873:18;;5860:32;;-1:-1:-1;5939:2:282;5924:18;;;5911:32;;5629:320;-1:-1:-1;;;5629:320:282:o;6382:651::-;6504:6;6512;6565:2;6553:9;6544:7;6540:23;6536:32;6533:52;;;6581:1;6578;6571:12;6533:52;6621:9;6608:23;6650:18;6691:2;6683:6;6680:14;6677:34;;;6707:1;6704;6697:12;6677:34;6745:6;6734:9;6730:22;6720:32;;6790:7;6783:4;6779:2;6775:13;6771:27;6761:55;;6812:1;6809;6802:12;6761:55;6852:2;6839:16;6878:2;6870:6;6867:14;6864:34;;;6894:1;6891;6884:12;6864:34;6947:7;6942:2;6932:6;6929:1;6925:14;6921:2;6917:23;6913:32;6910:45;6907:65;;;6968:1;6965;6958:12;6907:65;6999:2;6991:11;;;;;7021:6;;-1:-1:-1;6382:651:282;;-1:-1:-1;;;;6382:651:282:o;7544:260::-;7612:6;7620;7673:2;7661:9;7652:7;7648:23;7644:32;7641:52;;;7689:1;7686;7679:12;7641:52;7712:29;7731:9;7712:29;:::i;:::-;7702:39;;7760:38;7794:2;7783:9;7779:18;7760:38;:::i;:::-;7750:48;;7544:260;;;;;:::o;8075:770::-;8196:6;8204;8212;8220;8273:2;8261:9;8252:7;8248:23;8244:32;8241:52;;;8289:1;8286;8279:12;8241:52;8329:9;8316:23;8358:18;8399:2;8391:6;8388:14;8385:34;;;8415:1;8412;8405:12;8385:34;8454:69;8515:7;8506:6;8495:9;8491:22;8454:69;:::i;:::-;8542:8;;-1:-1:-1;8428:95:282;-1:-1:-1;8630:2:282;8615:18;;8602:32;;-1:-1:-1;8646:16:282;;;8643:36;;;8675:1;8672;8665:12;8643:36;;8714:71;8777:7;8766:8;8755:9;8751:24;8714:71;:::i;:::-;8075:770;;;;-1:-1:-1;8804:8:282;-1:-1:-1;;;;8075:770:282:o;8850:184::-;8902:77;8899:1;8892:88;8999:4;8996:1;8989:15;9023:4;9020:1;9013:15;9039:778;9082:5;9135:3;9128:4;9120:6;9116:17;9112:27;9102:55;;9153:1;9150;9143:12;9102:55;9189:6;9176:20;9215:18;9252:2;9248;9245:10;9242:36;;;9258:18;;:::i;:::-;9392:2;9386:9;9454:4;9446:13;;9297:66;9442:22;;;9466:2;9438:31;9434:40;9422:53;;;9490:18;;;9510:22;;;9487:46;9484:72;;;9536:18;;:::i;:::-;9576:10;9572:2;9565:22;9611:2;9603:6;9596:18;9657:3;9650:4;9645:2;9637:6;9633:15;9629:26;9626:35;9623:55;;;9674:1;9671;9664:12;9623:55;9738:2;9731:4;9723:6;9719:17;9712:4;9704:6;9700:17;9687:54;9785:1;9778:4;9773:2;9765:6;9761:15;9757:26;9750:37;9805:6;9796:15;;;;;;9039:778;;;;:::o;9822:611::-;9919:6;9927;9935;9988:2;9976:9;9967:7;9963:23;9959:32;9956:52;;;10004:1;10001;9994:12;9956:52;10040:9;10027:23;10017:33;;10101:2;10090:9;10086:18;10073:32;10124:18;10165:2;10157:6;10154:14;10151:34;;;10181:1;10178;10171:12;10151:34;10204:50;10246:7;10237:6;10226:9;10222:22;10204:50;:::i;:::-;10194:60;;10307:2;10296:9;10292:18;10279:32;10263:48;;10336:2;10326:8;10323:16;10320:36;;;10352:1;10349;10342:12;10320:36;;10375:52;10419:7;10408:8;10397:9;10393:24;10375:52;:::i;:::-;10365:62;;;9822:611;;;;;:::o;10438:437::-;10517:1;10513:12;;;;10560;;;10581:61;;10635:4;10627:6;10623:17;10613:27;;10581:61;10688:2;10680:6;10677:14;10657:18;10654:38;10651:218;;10725:77;10722:1;10715:88;10826:4;10823:1;10816:15;10854:4;10851:1;10844:15;10651:218;;10438:437;;;:::o;11288:184::-;11340:77;11337:1;11330:88;11437:4;11434:1;11427:15;11461:4;11458:1;11451:15;11477:125;11542:9;;;11563:10;;;11560:36;;;11576:18;;:::i;12415:184::-;12467:77;12464:1;12457:88;12564:4;12561:1;12554:15;12588:4;12585:1;12578:15;17110:195;17149:3;17180:66;17173:5;17170:77;17167:103;;17250:18;;:::i;:::-;-1:-1:-1;17297:1:282;17286:13;;17110:195::o;18082:453::-;18334:33;18329:3;18322:46;18304:3;18397:6;18391:13;18413:75;18481:6;18476:2;18471:3;18467:12;18460:4;18452:6;18448:17;18413:75;:::i;:::-;18508:16;;;;18526:2;18504:25;;18082:453;-1:-1:-1;;18082:453:282:o;18540:331::-;18645:9;18656;18698:8;18686:10;18683:24;18680:44;;;18720:1;18717;18710:12;18680:44;18749:6;18739:8;18736:20;18733:40;;;18769:1;18766;18759:12;18733:40;-1:-1:-1;;18795:23:282;;;18840:25;;;;;-1:-1:-1;18540:331:282:o;18876:315::-;18996:19;;19035:2;19027:11;;19024:161;;;19107:66;19096:2;19092:12;;;19089:1;19085:20;19081:93;19070:105;18876:315;;;;:::o;19196:424::-;19411:6;19406:3;19399:19;19448:6;19443:2;19438:3;19434:12;19427:28;19381:3;19484:6;19478:13;19500:73;19566:6;19561:2;19556:3;19552:12;19547:2;19539:6;19535:15;19500:73;:::i;:::-;19593:16;;;;19611:2;19589:25;;19196:424;-1:-1:-1;;;;19196:424:282:o;19751:545::-;19853:2;19848:3;19845:11;19842:448;;;19889:1;19914:5;19910:2;19903:17;19959:4;19955:2;19945:19;20029:2;20017:10;20013:19;20010:1;20006:27;20000:4;19996:38;20065:4;20053:10;20050:20;20047:47;;;-1:-1:-1;20088:4:282;20047:47;20143:2;20138:3;20134:12;20131:1;20127:20;20121:4;20117:31;20107:41;;20198:82;20216:2;20209:5;20206:13;20198:82;;;20261:17;;;20242:1;20231:13;20198:82;;20532:1471;20658:3;20652:10;20685:18;20677:6;20674:30;20671:56;;;20707:18;;:::i;:::-;20736:97;20826:6;20786:38;20818:4;20812:11;20786:38;:::i;:::-;20780:4;20736:97;:::i;:::-;20888:4;;20952:2;20941:14;;20969:1;20964:782;;;;21790:1;21807:6;21804:89;;;-1:-1:-1;21859:19:282;;;21853:26;21804:89;20438:66;20429:1;20425:11;;;20421:84;20417:89;20407:100;20513:1;20509:11;;;20404:117;21906:81;;20934:1063;;20964:782;19698:1;19691:14;;;19735:4;19722:18;;21012:66;21000:79;;;21177:236;21191:7;21188:1;21185:14;21177:236;;;21280:19;;;21274:26;21259:42;;21372:27;;;;21340:1;21328:14;;;;21207:19;;21177:236;;;21181:3;21441:6;21432:7;21429:19;21426:261;;;21502:19;;;21496:26;21603:66;21585:1;21581:14;;;21597:3;21577:24;21573:97;21569:102;21554:118;21539:134;;21426:261;-1:-1:-1;;;;;21733:1:282;21717:14;;;21713:22;21700:36;;-1:-1:-1;20532:1471:282:o;22008:686::-;22322:10;22314:6;22310:23;22299:9;22292:42;22370:6;22365:2;22354:9;22350:18;22343:34;22413:3;22408:2;22397:9;22393:18;22386:31;22273:4;22440:46;22481:3;22470:9;22466:19;22458:6;22440:46;:::i;:::-;22534:9;22526:6;22522:22;22517:2;22506:9;22502:18;22495:50;22562:33;22588:6;22580;22562:33;:::i;:::-;22554:41;;;22644:42;22636:6;22632:55;22626:3;22615:9;22611:19;22604:84;22008:686;;;;;;;;:::o;22699:184::-;22769:6;22822:2;22810:9;22801:7;22797:23;22793:32;22790:52;;;22838:1;22835;22828:12;22790:52;-1:-1:-1;22861:16:282;;22699:184;-1:-1:-1;22699:184:282:o;24071:128::-;24138:9;;;24159:11;;;24156:37;;;24173:18;;:::i;24204:184::-;24256:77;24253:1;24246:88;24353:4;24350:1;24343:15;24377:4;24374:1;24367:15;24393:718;24684:66;24675:6;24670:3;24666:16;24662:89;24657:3;24650:102;24781:6;24777:1;24772:3;24768:11;24761:27;24818:6;24813:2;24808:3;24804:12;24797:28;24876:66;24867:6;24863:2;24859:15;24855:88;24850:2;24845:3;24841:12;24834:110;24632:3;24973:6;24967:13;24989:75;25057:6;25052:2;25047:3;25043:12;25036:4;25028:6;25024:17;24989:75;:::i;:::-;25084:16;;;;25102:2;25080:25;;24393:718;-1:-1:-1;;;;;;24393:718:282:o",
    linkReferences: {},
    immutableReferences: {
      "17634": [
        { start: 1460, length: 32 },
        { start: 2737, length: 32 },
        { start: 7794, length: 32 },
        { start: 8727, length: 32 },
      ],
      "17636": [{ start: 1195, length: 32 }],
      "30511": [{ start: 755, length: 32 }],
    },
  },
  methodIdentifiers: {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "destinationGas(uint32)": "775313a1",
    "domains()": "440df4f4",
    "enrollRemoteRouter(uint32,bytes32)": "b49c53a7",
    "enrollRemoteRouters(uint32[],bytes32[])": "e9198bf9",
    "handle(uint32,bytes32,bytes)": "56d5d475",
    "hook()": "7f5a7c7b",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(uint256,string,string)": "eedfca5f",
    "interchainSecurityModule()": "de523cf3",
    "localDomain()": "8d3638f4",
    "mailbox()": "d5438eae",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "quoteGasPayment(uint32)": "f2ed8c53",
    "renounceOwnership()": "715018a6",
    "routers(uint32)": "2ead72f6",
    "setDestinationGas((uint32,uint256)[])": "b1bd6436",
    "setDestinationGas(uint32,uint256)": "49d462ef",
    "setHook(address)": "3dfd3873",
    "setInterchainSecurityModule(address)": "0e72cc06",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "transferRemote(uint32,bytes32,uint256)": "81b4e8b4",
    "unenrollRemoteRouter(uint32)": "efae508a",
    "unenrollRemoteRouters(uint32[])": "71a15b38",
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.19+commit.7dd6d404"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"__decimals","type":"uint8"},{"internalType":"address","name":"_mailbox","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"origin","type":"uint32"},{"indexed":true,"internalType":"bytes32","name":"recipient","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ReceivedTransferRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"destination","type":"uint32"},{"indexed":true,"internalType":"bytes32","name":"recipient","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SentTransferRemote","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"","type":"uint32"}],"name":"destinationGas","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"domains","outputs":[{"internalType":"uint32[]","name":"","type":"uint32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"},{"internalType":"bytes32","name":"_router","type":"bytes32"}],"name":"enrollRemoteRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"_domains","type":"uint32[]"},{"internalType":"bytes32[]","name":"_addresses","type":"bytes32[]"}],"name":"enrollRemoteRouters","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_origin","type":"uint32"},{"internalType":"bytes32","name":"_sender","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"handle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"hook","outputs":[{"internalType":"contract IPostDispatchHook","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"interchainSecurityModule","outputs":[{"internalType":"contract IInterchainSecurityModule","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"localDomain","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mailbox","outputs":[{"internalType":"contract IMailbox","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"_destinationDomain","type":"uint32"}],"name":"quoteGasPayment","outputs":[{"internalType":"uint256","name":"_gasPayment","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"}],"name":"routers","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32","name":"domain","type":"uint32"},{"internalType":"uint256","name":"gas","type":"uint256"}],"name":"setDestinationGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint32","name":"domain","type":"uint32"},{"internalType":"uint256","name":"gas","type":"uint256"}],"internalType":"struct GasRouter.GasRouterConfig[]","name":"gasConfigs","type":"tuple[]"}],"name":"setDestinationGas","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_hook","type":"address"}],"name":"setHook","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_module","type":"address"}],"name":"setInterchainSecurityModule","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_destination","type":"uint32"},{"internalType":"bytes32","name":"_recipient","type":"bytes32"},{"internalType":"uint256","name":"_amountOrId","type":"uint256"}],"name":"transferRemote","outputs":[{"internalType":"bytes32","name":"messageId","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"}],"name":"unenrollRemoteRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"_domains","type":"uint32[]"}],"name":"unenrollRemoteRouters","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Abacus Works","details":"Supply on each chain is not constant but the aggregate supply across all chains is.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."},"ReceivedTransferRemote(uint32,bytes32,uint256)":{"details":"Emitted on `_handle` when a transfer message is processed.","params":{"amount":"The amount of tokens minted on the destination chain.","origin":"The identifier of the origin chain.","recipient":"The address of the recipient on the destination chain."}},"SentTransferRemote(uint32,bytes32,uint256)":{"details":"Emitted on `transferRemote` when a transfer message is dispatched.","params":{"amount":"The amount of tokens burnt on the origin chain.","destination":"The identifier of the destination chain.","recipient":"The address of the recipient on the destination chain."}},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it\'s overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"enrollRemoteRouter(uint32,bytes32)":{"params":{"_domain":"The domain of the remote Application Router","_router":"The address of the remote Application Router"}},"enrollRemoteRouters(uint32[],bytes32[])":{"params":{"_addresses":"The addresses of the remote Application Routers","_domains":"The domains of the remote Application Routers"}},"handle(uint32,bytes32,bytes)":{"params":{"_message":"The message","_origin":"The origin domain","_sender":"The sender address"}},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"initialize(uint256,string,string)":{"params":{"_name":"The name of the token.","_symbol":"The symbol of the token.","_totalSupply":"The initial supply of the token."}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"quoteGasPayment(uint32)":{"params":{"_destinationDomain":"The domain of the router."},"returns":{"_gasPayment":"Payment computed by the registered InterchainGasPaymaster."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"routers(uint32)":{"details":"Returns 0 address if no router is enrolled for the given domain","params":{"_domain":"The remote domain ID."},"returns":{"_0":"router The address of the Router contract for the given domain"}},"setDestinationGas((uint32,uint256)[])":{"params":{"gasConfigs":"The array of GasRouterConfig structs"}},"setDestinationGas(uint32,uint256)":{"params":{"domain":"The destination domain ID","gas":"The gas limit"}},"setHook(address)":{"params":{"_hook":"The address of the hook contract."}},"setInterchainSecurityModule(address)":{"params":{"_module":"The address of the interchain security module contract."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``\'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferRemote(uint32,bytes32,uint256)":{"details":"Delegates transfer logic to `_transferFromSender` implementation.Emits `SentTransferRemote` event on the origin chain.","params":{"_amountOrId":"The amount or identifier of tokens to be sent to the remote recipient.","_destination":"The identifier of the destination chain.","_recipient":"The address of the recipient on the destination chain."},"returns":{"messageId":"The identifier of the dispatched message."}},"unenrollRemoteRouter(uint32)":{"params":{"_domain":"The domain of the remote Application Router"}},"unenrollRemoteRouters(uint32[])":{"params":{"_domains":"The domains of the remote Application Routers"}}},"title":"Hyperlane ERC20 Token Router that extends ERC20 with remote transfer functionality.","version":1},"userdoc":{"kind":"user","methods":{"enrollRemoteRouter(uint32,bytes32)":{"notice":"Register the address of a Router contract for the same Application on a remote chain"},"enrollRemoteRouters(uint32[],bytes32[])":{"notice":"Batch version of `enrollRemoteRouter`"},"handle(uint32,bytes32,bytes)":{"notice":"Handles an incoming message"},"initialize(uint256,string,string)":{"notice":"Initializes the Hyperlane router, ERC20 metadata, and mints initial supply to deployer."},"quoteGasPayment(uint32)":{"notice":"Returns the gas payment required to dispatch a message to the given domain\'s router."},"routers(uint32)":{"notice":"Returns the address of the Router contract for the given domain"},"setDestinationGas((uint32,uint256)[])":{"notice":"Sets the gas amount dispatched for each configured domain."},"setDestinationGas(uint32,uint256)":{"notice":"Sets the gas amount dispatched for each configured domain."},"setHook(address)":{"notice":"Sets the address of the application\'s custom hook."},"setInterchainSecurityModule(address)":{"notice":"Sets the address of the application\'s custom interchain security module."},"transferRemote(uint32,bytes32,uint256)":{"notice":"Transfers `_amountOrId` token to `_recipient` on `_destination` domain."},"unenrollRemoteRouter(uint32)":{"notice":"Unregister the domain"},"unenrollRemoteRouters(uint32[])":{"notice":"Batch version of `unenrollRemoteRouter`"}},"version":1}},"settings":{"compilationTarget":{"contracts/token/HypERC20.sol":"HypERC20"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":999999},"remappings":[":@eth-optimism/=../node_modules/@eth-optimism/",":@openzeppelin/=../node_modules/@openzeppelin/",":ds-test/=lib/forge-std/lib/ds-test/src/",":forge-std/=lib/forge-std/src/"]},"sources":{"../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"keccak256":"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98","license":"MIT","urls":["bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8","dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"]},"../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","license":"MIT","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"]},"../node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"keccak256":"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784","license":"MIT","urls":["bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee","dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"]},"../node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"keccak256":"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f","license":"MIT","urls":["bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f","dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"]},"../node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":{"keccak256":"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb","license":"MIT","urls":["bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d","dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"]},"../node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","license":"MIT","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"]},"../node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","license":"MIT","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"]},"../node_modules/@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa","license":"MIT","urls":["bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931","dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"]},"../node_modules/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0","license":"MIT","urls":["bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f","dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"]},"../node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","license":"MIT","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"]},"../node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc","license":"MIT","urls":["bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7","dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"]},"../node_modules/@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"keccak256":"0x7ebfe2422bc571599c2ec20577d7848e1e7a0acf85fa7c2d9636618bbbdf6fca","license":"MIT","urls":["bzz-raw://77fb3f64d470c92c3142e3c07d2f18ad78723a1f1e680a251dcde37e865d0636","dweb:/ipfs/QmXAeNPRRGfNSRxi1d17QjkNTBZFemhiMzJVvEJgMWwqUW"]},"../node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514","license":"MIT","urls":["bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df","dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"]},"contracts/client/GasRouter.sol":{"keccak256":"0xe399a57c8ea3746c50192259c7199d6835f778db1f3f3109368576a444f9c2aa","license":"MIT OR Apache-2.0","urls":["bzz-raw://e8c3810c20d4a609e48aefd56de9ecf35e8cc4ef6412c03792cd02401e0955e0","dweb:/ipfs/QmSKimeS3juaof5SHqtpZhQLSrNTmdjdrjwf4cHvCKRRi3"]},"contracts/client/MailboxClient.sol":{"keccak256":"0xbe8ca8a65272d4728dd5edba78821949e85d6ecb01b03c8981e474b47386dd1c","license":"MIT OR Apache-2.0","urls":["bzz-raw://eb88bd1004f4f581461b5c0462e1551330f7a79c799400c2ace477f56ce04af8","dweb:/ipfs/QmesKb466xFMsdYzUr49cQf4cvmMv8u1s1jxPW6ST4NwfU"]},"contracts/client/Router.sol":{"keccak256":"0x9566d5dab0be03c336616795b3bd80a825df496f83ff261b163b3c64d3f19139","license":"MIT OR Apache-2.0","urls":["bzz-raw://71a991791591e2f495f54afdf6c527d0f1825c9ccd6a557e87b4a8962aaca018","dweb:/ipfs/QmZJHeamA2Er1wwp5ZnTq5L7bGVHQcVNgEHfjwG8ByavDj"]},"contracts/hooks/libs/StandardHookMetadata.sol":{"keccak256":"0x28e8be5b70f6b5b7c6a52c4906635639ae5ef3fe2ac970b7c30299e939b38e42","license":"MIT OR Apache-2.0","urls":["bzz-raw://6a3a41ef53096ed385dd593a8b32955c12ced1b210102f84990f30ee1311b2f4","dweb:/ipfs/QmZyNfa4tpL5WhpGW73RCzu6rWMFW88Uvm54J5gq1hvXgQ"]},"contracts/interfaces/IInterchainSecurityModule.sol":{"keccak256":"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce","license":"MIT OR Apache-2.0","urls":["bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2","dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p"]},"contracts/interfaces/IMailbox.sol":{"keccak256":"0x9cd728ba304279775818f8c7b4c02f8c5dd2b28e051ec466dbe36129be01a6ee","license":"MIT OR Apache-2.0","urls":["bzz-raw://23461e80c67508d6f0f94a317c48d99a1942209ebc306b50f843b3f1cc920bac","dweb:/ipfs/QmXbJSFtHfxpHwtvGZJBodSDcQHAb6fGsPU17w11dapVnC"]},"contracts/interfaces/IMessageRecipient.sol":{"keccak256":"0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d","license":"MIT OR Apache-2.0","urls":["bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119","dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6"]},"contracts/interfaces/hooks/IPostDispatchHook.sol":{"keccak256":"0xe315e6ecacc18c836349bb2792187066c3c743aaa7f2504d181be255f5c9632e","license":"MIT OR Apache-2.0","urls":["bzz-raw://d0c8b081c967e112cddb70a6377a1c8e3950dd225fc29dcda607071cfb168447","dweb:/ipfs/QmcorLLZueFg69B8iaU3rr42CrEP7PPH3HeJLspV5WAoKZ"]},"contracts/libs/EnumerableMapExtended.sol":{"keccak256":"0xbd661cdeba756caf35191b71a85461a9ff79c047ec98ec05063748dfc0419595","license":"MIT OR Apache-2.0","urls":["bzz-raw://d88af58f2f47a6ad7c24abef9419d1474cba6e372830cc82794e37943dc3d9ce","dweb:/ipfs/QmbaTGUtTbtxmVnZWTq5Kt6ATmHXmrUssXPXGd6F3NkEMc"]},"contracts/libs/Message.sol":{"keccak256":"0x5319af5ade07bcb021d6373f0713f24f34431def78cda16fea6755f580fb5e78","license":"MIT OR Apache-2.0","urls":["bzz-raw://f531eecebd22a535398def83b078aff4f72d88940a0e9474ad3244a555f00d53","dweb:/ipfs/QmQjtjpf4qwaM9QVyWBsogRvZeokKESTVdsX3z9mt1wZFa"]},"contracts/libs/TypeCasts.sol":{"keccak256":"0x7e3608c35e1109fc137cea688760f9c10223b1e7d110be113ad44ff716974ead","license":"MIT OR Apache-2.0","urls":["bzz-raw://6fff310e714caca96e809f5a56884a2e9edf842d928929d6228d6593ad8f3d52","dweb:/ipfs/QmSHQmcZV2GF8CUJjny128rDThPEDvUvrfA5kBs7kAK5GJ"]},"contracts/token/HypERC20.sol":{"keccak256":"0x4fc979556b9721226bc92e40c5aee813088d3fd500d2f8756c986bede88019a4","license":"Apache-2.0","urls":["bzz-raw://817bac39e36a3d8c5b570640f14b2e5b7102ea7917cf2fe4b5f8329cfdb67fcb","dweb:/ipfs/QmSRFVEbe19GnKLg8Dw9hYxcJL1YDmrrwDZU6twUSt6XzA"]},"contracts/token/libs/TokenMessage.sol":{"keccak256":"0x0bd8b076985c44231f6675f3bc968db8f8bd471af6ed919fb06a8f5d3bc8be0a","license":"MIT OR Apache-2.0","urls":["bzz-raw://ec1f44eb7bf46b47d9af2482c2c70b9083cee92f25c93e3517b0e19462496337","dweb:/ipfs/QmayA6NmKCJK6Pkt4s9LT4vaKbYrQrUrWCmrUqkiH3nFSb"]},"contracts/token/libs/TokenRouter.sol":{"keccak256":"0xf18c6e532a210d523623e741e82d87cebf3dc635810dd1a6d1a1fe38640e4257","license":"Apache-2.0","urls":["bzz-raw://ff70c78187265fbd3028625854073db566c353f4e93c0649e1683328a4000844","dweb:/ipfs/QmNd23vddN3gYU6wydrCBWc888HQUc1ZHtUXUktt2xLnBX"]}},"version":1}',
  metadata: {
    compiler: { version: "0.8.19+commit.7dd6d404" },
    language: "Solidity",
    output: {
      abi: [
        {
          inputs: [
            { internalType: "uint8", name: "__decimals", type: "uint8" },
            { internalType: "address", name: "_mailbox", type: "address" },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "Approval",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "uint8",
              name: "version",
              type: "uint8",
              indexed: false,
            },
          ],
          type: "event",
          name: "Initialized",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "previousOwner",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
              indexed: true,
            },
          ],
          type: "event",
          name: "OwnershipTransferred",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "origin",
              type: "uint32",
              indexed: true,
            },
            {
              internalType: "bytes32",
              name: "recipient",
              type: "bytes32",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "ReceivedTransferRemote",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "destination",
              type: "uint32",
              indexed: true,
            },
            {
              internalType: "bytes32",
              name: "recipient",
              type: "bytes32",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "SentTransferRemote",
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
              indexed: true,
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
              indexed: true,
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
              indexed: false,
            },
          ],
          type: "event",
          name: "Transfer",
          anonymous: false,
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
          ],
          stateMutability: "view",
          type: "function",
          name: "allowance",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "approve",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            { internalType: "address", name: "_account", type: "address" },
          ],
          stateMutability: "view",
          type: "function",
          name: "balanceOf",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "decimals",
          outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            {
              internalType: "uint256",
              name: "subtractedValue",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "decreaseAllowance",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [{ internalType: "uint32", name: "", type: "uint32" }],
          stateMutability: "view",
          type: "function",
          name: "destinationGas",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "domains",
          outputs: [{ internalType: "uint32[]", name: "", type: "uint32[]" }],
        },
        {
          inputs: [
            { internalType: "uint32", name: "_domain", type: "uint32" },
            { internalType: "bytes32", name: "_router", type: "bytes32" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "enrollRemoteRouter",
        },
        {
          inputs: [
            {
              internalType: "uint32[]",
              name: "_domains",
              type: "uint32[]",
            },
            {
              internalType: "bytes32[]",
              name: "_addresses",
              type: "bytes32[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "enrollRemoteRouters",
        },
        {
          inputs: [
            { internalType: "uint32", name: "_origin", type: "uint32" },
            { internalType: "bytes32", name: "_sender", type: "bytes32" },
            { internalType: "bytes", name: "_message", type: "bytes" },
          ],
          stateMutability: "payable",
          type: "function",
          name: "handle",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "hook",
          outputs: [
            {
              internalType: "contract IPostDispatchHook",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            {
              internalType: "uint256",
              name: "addedValue",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "increaseAllowance",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_totalSupply",
              type: "uint256",
            },
            { internalType: "string", name: "_name", type: "string" },
            { internalType: "string", name: "_symbol", type: "string" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "initialize",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "interchainSecurityModule",
          outputs: [
            {
              internalType: "contract IInterchainSecurityModule",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "localDomain",
          outputs: [{ internalType: "uint32", name: "", type: "uint32" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "mailbox",
          outputs: [
            {
              internalType: "contract IMailbox",
              name: "",
              type: "address",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "name",
          outputs: [{ internalType: "string", name: "", type: "string" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "owner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "_destinationDomain",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
          name: "quoteGasPayment",
          outputs: [
            {
              internalType: "uint256",
              name: "_gasPayment",
              type: "uint256",
            },
          ],
        },
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "function",
          name: "renounceOwnership",
        },
        {
          inputs: [{ internalType: "uint32", name: "_domain", type: "uint32" }],
          stateMutability: "view",
          type: "function",
          name: "routers",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
        },
        {
          inputs: [
            { internalType: "uint32", name: "domain", type: "uint32" },
            { internalType: "uint256", name: "gas", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "setDestinationGas",
        },
        {
          inputs: [
            {
              internalType: "struct GasRouter.GasRouterConfig[]",
              name: "gasConfigs",
              type: "tuple[]",
              components: [
                {
                  internalType: "uint32",
                  name: "domain",
                  type: "uint32",
                },
                { internalType: "uint256", name: "gas", type: "uint256" },
              ],
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "setDestinationGas",
        },
        {
          inputs: [{ internalType: "address", name: "_hook", type: "address" }],
          stateMutability: "nonpayable",
          type: "function",
          name: "setHook",
        },
        {
          inputs: [
            { internalType: "address", name: "_module", type: "address" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "setInterchainSecurityModule",
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "symbol",
          outputs: [{ internalType: "string", name: "", type: "string" }],
        },
        {
          inputs: [],
          stateMutability: "view",
          type: "function",
          name: "totalSupply",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        },
        {
          inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transfer",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferFrom",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
        },
        {
          inputs: [
            { internalType: "address", name: "newOwner", type: "address" },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "transferOwnership",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "_destination",
              type: "uint32",
            },
            {
              internalType: "bytes32",
              name: "_recipient",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_amountOrId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
          name: "transferRemote",
          outputs: [
            {
              internalType: "bytes32",
              name: "messageId",
              type: "bytes32",
            },
          ],
        },
        {
          inputs: [{ internalType: "uint32", name: "_domain", type: "uint32" }],
          stateMutability: "nonpayable",
          type: "function",
          name: "unenrollRemoteRouter",
        },
        {
          inputs: [
            {
              internalType: "uint32[]",
              name: "_domains",
              type: "uint32[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
          name: "unenrollRemoteRouters",
        },
      ],
      devdoc: {
        kind: "dev",
        methods: {
          "allowance(address,address)": {
            details: "See {IERC20-allowance}.",
          },
          "approve(address,uint256)": {
            details:
              "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.",
          },
          "decimals()": {
            details:
              "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
          },
          "decreaseAllowance(address,uint256)": {
            details:
              "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.",
          },
          "enrollRemoteRouter(uint32,bytes32)": {
            params: {
              _domain: "The domain of the remote Application Router",
              _router: "The address of the remote Application Router",
            },
          },
          "enrollRemoteRouters(uint32[],bytes32[])": {
            params: {
              _addresses: "The addresses of the remote Application Routers",
              _domains: "The domains of the remote Application Routers",
            },
          },
          "handle(uint32,bytes32,bytes)": {
            params: {
              _message: "The message",
              _origin: "The origin domain",
              _sender: "The sender address",
            },
          },
          "increaseAllowance(address,uint256)": {
            details:
              "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.",
          },
          "initialize(uint256,string,string)": {
            params: {
              _name: "The name of the token.",
              _symbol: "The symbol of the token.",
              _totalSupply: "The initial supply of the token.",
            },
          },
          "name()": { details: "Returns the name of the token." },
          "owner()": { details: "Returns the address of the current owner." },
          "quoteGasPayment(uint32)": {
            params: { _destinationDomain: "The domain of the router." },
            returns: {
              _gasPayment:
                "Payment computed by the registered InterchainGasPaymaster.",
            },
          },
          "renounceOwnership()": {
            details:
              "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.",
          },
          "routers(uint32)": {
            details:
              "Returns 0 address if no router is enrolled for the given domain",
            params: { _domain: "The remote domain ID." },
            returns: {
              _0: "router The address of the Router contract for the given domain",
            },
          },
          "setDestinationGas((uint32,uint256)[])": {
            params: { gasConfigs: "The array of GasRouterConfig structs" },
          },
          "setDestinationGas(uint32,uint256)": {
            params: {
              domain: "The destination domain ID",
              gas: "The gas limit",
            },
          },
          "setHook(address)": {
            params: { _hook: "The address of the hook contract." },
          },
          "setInterchainSecurityModule(address)": {
            params: {
              _module:
                "The address of the interchain security module contract.",
            },
          },
          "symbol()": {
            details:
              "Returns the symbol of the token, usually a shorter version of the name.",
          },
          "totalSupply()": { details: "See {IERC20-totalSupply}." },
          "transfer(address,uint256)": {
            details:
              "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.",
          },
          "transferFrom(address,address,uint256)": {
            details:
              "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.",
          },
          "transferOwnership(address)": {
            details:
              "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.",
          },
          "transferRemote(uint32,bytes32,uint256)": {
            details:
              "Delegates transfer logic to `_transferFromSender` implementation.Emits `SentTransferRemote` event on the origin chain.",
            params: {
              _amountOrId:
                "The amount or identifier of tokens to be sent to the remote recipient.",
              _destination: "The identifier of the destination chain.",
              _recipient:
                "The address of the recipient on the destination chain.",
            },
            returns: {
              messageId: "The identifier of the dispatched message.",
            },
          },
          "unenrollRemoteRouter(uint32)": {
            params: {
              _domain: "The domain of the remote Application Router",
            },
          },
          "unenrollRemoteRouters(uint32[])": {
            params: {
              _domains: "The domains of the remote Application Routers",
            },
          },
        },
        version: 1,
      },
      userdoc: {
        kind: "user",
        methods: {
          "enrollRemoteRouter(uint32,bytes32)": {
            notice:
              "Register the address of a Router contract for the same Application on a remote chain",
          },
          "enrollRemoteRouters(uint32[],bytes32[])": {
            notice: "Batch version of `enrollRemoteRouter`",
          },
          "handle(uint32,bytes32,bytes)": {
            notice: "Handles an incoming message",
          },
          "initialize(uint256,string,string)": {
            notice:
              "Initializes the Hyperlane router, ERC20 metadata, and mints initial supply to deployer.",
          },
          "quoteGasPayment(uint32)": {
            notice:
              "Returns the gas payment required to dispatch a message to the given domain's router.",
          },
          "routers(uint32)": {
            notice:
              "Returns the address of the Router contract for the given domain",
          },
          "setDestinationGas((uint32,uint256)[])": {
            notice:
              "Sets the gas amount dispatched for each configured domain.",
          },
          "setDestinationGas(uint32,uint256)": {
            notice:
              "Sets the gas amount dispatched for each configured domain.",
          },
          "setHook(address)": {
            notice: "Sets the address of the application's custom hook.",
          },
          "setInterchainSecurityModule(address)": {
            notice:
              "Sets the address of the application's custom interchain security module.",
          },
          "transferRemote(uint32,bytes32,uint256)": {
            notice:
              "Transfers `_amountOrId` token to `_recipient` on `_destination` domain.",
          },
          "unenrollRemoteRouter(uint32)": { notice: "Unregister the domain" },
          "unenrollRemoteRouters(uint32[])": {
            notice: "Batch version of `unenrollRemoteRouter`",
          },
        },
        version: 1,
      },
    },
    settings: {
      remappings: [
        "@eth-optimism/=../node_modules/@eth-optimism/",
        "@openzeppelin/=../node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
      ],
      optimizer: { enabled: true, runs: 999999 },
      metadata: { bytecodeHash: "ipfs" },
      compilationTarget: { "contracts/token/HypERC20.sol": "HypERC20" },
      evmVersion: "paris",
      libraries: {},
    },
    sources: {
      "../node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":
        {
          keccak256:
            "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
          urls: [
            "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
            "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B",
          ],
          license: "MIT",
        },
      "../node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":
        {
          keccak256:
            "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
          urls: [
            "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
            "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv",
          ],
          license: "MIT",
        },
      "../node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":
        {
          keccak256:
            "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
          urls: [
            "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
            "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN",
          ],
          license: "MIT",
        },
      "../node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":
        {
          keccak256:
            "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
          urls: [
            "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
            "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco",
          ],
          license: "MIT",
        },
      "../node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol":
        {
          keccak256:
            "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
          urls: [
            "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
            "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ",
          ],
          license: "MIT",
        },
      "../node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":
        {
          keccak256:
            "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
          urls: [
            "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
            "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq",
          ],
          license: "MIT",
        },
      "../node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":
        {
          keccak256:
            "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
          urls: [
            "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
            "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a",
          ],
          license: "MIT",
        },
      "../node_modules/@openzeppelin/contracts/utils/Address.sol": {
        keccak256:
          "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        urls: [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm",
        ],
        license: "MIT",
      },
      "../node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        keccak256:
          "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        urls: [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n",
        ],
        license: "MIT",
      },
      "../node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        keccak256:
          "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        urls: [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS",
        ],
        license: "MIT",
      },
      "../node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        keccak256:
          "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        urls: [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6",
        ],
        license: "MIT",
      },
      "../node_modules/@openzeppelin/contracts/utils/structs/EnumerableMap.sol":
        {
          keccak256:
            "0x7ebfe2422bc571599c2ec20577d7848e1e7a0acf85fa7c2d9636618bbbdf6fca",
          urls: [
            "bzz-raw://77fb3f64d470c92c3142e3c07d2f18ad78723a1f1e680a251dcde37e865d0636",
            "dweb:/ipfs/QmXAeNPRRGfNSRxi1d17QjkNTBZFemhiMzJVvEJgMWwqUW",
          ],
          license: "MIT",
        },
      "../node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol":
        {
          keccak256:
            "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
          urls: [
            "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
            "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW",
          ],
          license: "MIT",
        },
      "contracts/client/GasRouter.sol": {
        keccak256:
          "0xe399a57c8ea3746c50192259c7199d6835f778db1f3f3109368576a444f9c2aa",
        urls: [
          "bzz-raw://e8c3810c20d4a609e48aefd56de9ecf35e8cc4ef6412c03792cd02401e0955e0",
          "dweb:/ipfs/QmSKimeS3juaof5SHqtpZhQLSrNTmdjdrjwf4cHvCKRRi3",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/client/MailboxClient.sol": {
        keccak256:
          "0xbe8ca8a65272d4728dd5edba78821949e85d6ecb01b03c8981e474b47386dd1c",
        urls: [
          "bzz-raw://eb88bd1004f4f581461b5c0462e1551330f7a79c799400c2ace477f56ce04af8",
          "dweb:/ipfs/QmesKb466xFMsdYzUr49cQf4cvmMv8u1s1jxPW6ST4NwfU",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/client/Router.sol": {
        keccak256:
          "0x9566d5dab0be03c336616795b3bd80a825df496f83ff261b163b3c64d3f19139",
        urls: [
          "bzz-raw://71a991791591e2f495f54afdf6c527d0f1825c9ccd6a557e87b4a8962aaca018",
          "dweb:/ipfs/QmZJHeamA2Er1wwp5ZnTq5L7bGVHQcVNgEHfjwG8ByavDj",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/hooks/libs/StandardHookMetadata.sol": {
        keccak256:
          "0x28e8be5b70f6b5b7c6a52c4906635639ae5ef3fe2ac970b7c30299e939b38e42",
        urls: [
          "bzz-raw://6a3a41ef53096ed385dd593a8b32955c12ced1b210102f84990f30ee1311b2f4",
          "dweb:/ipfs/QmZyNfa4tpL5WhpGW73RCzu6rWMFW88Uvm54J5gq1hvXgQ",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/interfaces/IInterchainSecurityModule.sol": {
        keccak256:
          "0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce",
        urls: [
          "bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2",
          "dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/interfaces/IMailbox.sol": {
        keccak256:
          "0x9cd728ba304279775818f8c7b4c02f8c5dd2b28e051ec466dbe36129be01a6ee",
        urls: [
          "bzz-raw://23461e80c67508d6f0f94a317c48d99a1942209ebc306b50f843b3f1cc920bac",
          "dweb:/ipfs/QmXbJSFtHfxpHwtvGZJBodSDcQHAb6fGsPU17w11dapVnC",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/interfaces/IMessageRecipient.sol": {
        keccak256:
          "0x145e8332a91295a710deb3cb1ab689144262ef6ec66d9570c600b778e9dd964d",
        urls: [
          "bzz-raw://a22ad97b1d8d3a37e8b4ad1519b893ac7cdf718c3a340999ffef4fb04060f119",
          "dweb:/ipfs/QmXp3w8yPm1vHyNrrSLr4YtRMP44eLadHnXSAjSecqB7H6",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/interfaces/hooks/IPostDispatchHook.sol": {
        keccak256:
          "0xe315e6ecacc18c836349bb2792187066c3c743aaa7f2504d181be255f5c9632e",
        urls: [
          "bzz-raw://d0c8b081c967e112cddb70a6377a1c8e3950dd225fc29dcda607071cfb168447",
          "dweb:/ipfs/QmcorLLZueFg69B8iaU3rr42CrEP7PPH3HeJLspV5WAoKZ",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/libs/EnumerableMapExtended.sol": {
        keccak256:
          "0xbd661cdeba756caf35191b71a85461a9ff79c047ec98ec05063748dfc0419595",
        urls: [
          "bzz-raw://d88af58f2f47a6ad7c24abef9419d1474cba6e372830cc82794e37943dc3d9ce",
          "dweb:/ipfs/QmbaTGUtTbtxmVnZWTq5Kt6ATmHXmrUssXPXGd6F3NkEMc",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/libs/Message.sol": {
        keccak256:
          "0x5319af5ade07bcb021d6373f0713f24f34431def78cda16fea6755f580fb5e78",
        urls: [
          "bzz-raw://f531eecebd22a535398def83b078aff4f72d88940a0e9474ad3244a555f00d53",
          "dweb:/ipfs/QmQjtjpf4qwaM9QVyWBsogRvZeokKESTVdsX3z9mt1wZFa",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/libs/TypeCasts.sol": {
        keccak256:
          "0x7e3608c35e1109fc137cea688760f9c10223b1e7d110be113ad44ff716974ead",
        urls: [
          "bzz-raw://6fff310e714caca96e809f5a56884a2e9edf842d928929d6228d6593ad8f3d52",
          "dweb:/ipfs/QmSHQmcZV2GF8CUJjny128rDThPEDvUvrfA5kBs7kAK5GJ",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/token/HypERC20.sol": {
        keccak256:
          "0x4fc979556b9721226bc92e40c5aee813088d3fd500d2f8756c986bede88019a4",
        urls: [
          "bzz-raw://817bac39e36a3d8c5b570640f14b2e5b7102ea7917cf2fe4b5f8329cfdb67fcb",
          "dweb:/ipfs/QmSRFVEbe19GnKLg8Dw9hYxcJL1YDmrrwDZU6twUSt6XzA",
        ],
        license: "Apache-2.0",
      },
      "contracts/token/libs/TokenMessage.sol": {
        keccak256:
          "0x0bd8b076985c44231f6675f3bc968db8f8bd471af6ed919fb06a8f5d3bc8be0a",
        urls: [
          "bzz-raw://ec1f44eb7bf46b47d9af2482c2c70b9083cee92f25c93e3517b0e19462496337",
          "dweb:/ipfs/QmayA6NmKCJK6Pkt4s9LT4vaKbYrQrUrWCmrUqkiH3nFSb",
        ],
        license: "MIT OR Apache-2.0",
      },
      "contracts/token/libs/TokenRouter.sol": {
        keccak256:
          "0xf18c6e532a210d523623e741e82d87cebf3dc635810dd1a6d1a1fe38640e4257",
        urls: [
          "bzz-raw://ff70c78187265fbd3028625854073db566c353f4e93c0649e1683328a4000844",
          "dweb:/ipfs/QmNd23vddN3gYU6wydrCBWc888HQUc1ZHtUXUktt2xLnBX",
        ],
        license: "Apache-2.0",
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: "contracts/token/HypERC20.sol",
    id: 30615,
    exportedSymbols: {
      ERC20Upgradeable: [965],
      HypERC20: [30614],
      TokenRouter: [32189],
    },
    nodeType: "SourceUnit",
    src: "39:2085:220",
    nodes: [
      {
        id: 30500,
        nodeType: "PragmaDirective",
        src: "39:24:220",
        nodes: [],
        literals: ["solidity", ">=", "0.8", ".0"],
      },
      {
        id: 30502,
        nodeType: "ImportDirective",
        src: "65:51:220",
        nodes: [],
        absolutePath: "contracts/token/libs/TokenRouter.sol",
        file: "./libs/TokenRouter.sol",
        nameLocation: "-1:-1:-1",
        scope: 30615,
        sourceUnit: 32190,
        symbolAliases: [
          {
            foreign: {
              id: 30501,
              name: "TokenRouter",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 32189,
              src: "73:11:220",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 30504,
        nodeType: "ImportDirective",
        src: "118:102:220",
        nodes: [],
        absolutePath:
          "../node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        file: "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        nameLocation: "-1:-1:-1",
        scope: 30615,
        sourceUnit: 966,
        symbolAliases: [
          {
            foreign: {
              id: 30503,
              name: "ERC20Upgradeable",
              nodeType: "Identifier",
              overloadedDeclarations: [],
              referencedDeclaration: 965,
              src: "126:16:220",
              typeDescriptions: {},
            },
            nameLocation: "-1:-1:-1",
          },
        ],
        unitAlias: "",
      },
      {
        id: 30614,
        nodeType: "ContractDefinition",
        src: "440:1683:220",
        nodes: [
          {
            id: 30511,
            nodeType: "VariableDeclaration",
            src: "497:33:220",
            nodes: [],
            constant: false,
            mutability: "immutable",
            name: "_decimals",
            nameLocation: "521:9:220",
            scope: 30614,
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint8",
              typeString: "uint8",
            },
            typeName: {
              id: 30510,
              name: "uint8",
              nodeType: "ElementaryTypeName",
              src: "497:5:220",
              typeDescriptions: {
                typeIdentifier: "t_uint8",
                typeString: "uint8",
              },
            },
            visibility: "private",
          },
          {
            id: 30526,
            nodeType: "FunctionDefinition",
            src: "537:109:220",
            nodes: [],
            body: {
              id: 30525,
              nodeType: "Block",
              src: "607:39:220",
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 30523,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 30521,
                      name: "_decimals",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 30511,
                      src: "617:9:220",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      id: 30522,
                      name: "__decimals",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 30513,
                      src: "629:10:220",
                      typeDescriptions: {
                        typeIdentifier: "t_uint8",
                        typeString: "uint8",
                      },
                    },
                    src: "617:22:220",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                  },
                  id: 30524,
                  nodeType: "ExpressionStatement",
                  src: "617:22:220",
                },
              ],
            },
            implemented: true,
            kind: "constructor",
            modifiers: [
              {
                arguments: [
                  {
                    id: 30518,
                    name: "_mailbox",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 30515,
                    src: "597:8:220",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                ],
                id: 30519,
                kind: "baseConstructorSpecifier",
                modifierName: {
                  id: 30517,
                  name: "TokenRouter",
                  nameLocations: ["585:11:220"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 32189,
                  src: "585:11:220",
                },
                nodeType: "ModifierInvocation",
                src: "585:21:220",
              },
            ],
            name: "",
            nameLocation: "-1:-1:-1",
            parameters: {
              id: 30516,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 30513,
                  mutability: "mutable",
                  name: "__decimals",
                  nameLocation: "555:10:220",
                  nodeType: "VariableDeclaration",
                  scope: 30526,
                  src: "549:16:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint8",
                    typeString: "uint8",
                  },
                  typeName: {
                    id: 30512,
                    name: "uint8",
                    nodeType: "ElementaryTypeName",
                    src: "549:5:220",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 30515,
                  mutability: "mutable",
                  name: "_mailbox",
                  nameLocation: "575:8:220",
                  nodeType: "VariableDeclaration",
                  scope: 30526,
                  src: "567:16:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 30514,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "567:7:220",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "548:36:220",
            },
            returnParameters: {
              id: 30520,
              nodeType: "ParameterList",
              parameters: [],
              src: "607:0:220",
            },
            scope: 30614,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            id: 30550,
            nodeType: "FunctionDefinition",
            src: "921:260:220",
            nodes: [],
            body: {
              id: 30549,
              nodeType: "Block",
              src: "1058:123:220",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 30539,
                        name: "_name",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 30531,
                        src: "1118:5:220",
                        typeDescriptions: {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      },
                      {
                        id: 30540,
                        name: "_symbol",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 30533,
                        src: "1125:7:220",
                        typeDescriptions: {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                        {
                          typeIdentifier: "t_string_memory_ptr",
                          typeString: "string memory",
                        },
                      ],
                      id: 30538,
                      name: "__ERC20_init",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 400,
                      src: "1105:12:220",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (string memory,string memory)",
                      },
                    },
                    id: 30541,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1105:28:220",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 30542,
                  nodeType: "ExpressionStatement",
                  src: "1105:28:220",
                },
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 30544,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: "1149:3:220",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 30545,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "1153:6:220",
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "1149:10:220",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 30546,
                        name: "_totalSupply",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 30529,
                        src: "1161:12:220",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 30543,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 777,
                      src: "1143:5:220",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 30547,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1143:31:220",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 30548,
                  nodeType: "ExpressionStatement",
                  src: "1143:31:220",
                },
              ],
            },
            documentation: {
              id: 30527,
              nodeType: "StructuredDocumentation",
              src: "652:264:220",
              text: " @notice Initializes the Hyperlane router, ERC20 metadata, and mints initial supply to deployer.\n @param _totalSupply The initial supply of the token.\n @param _name The name of the token.\n @param _symbol The symbol of the token.",
            },
            functionSelector: "eedfca5f",
            implemented: true,
            kind: "function",
            modifiers: [
              {
                id: 30536,
                kind: "modifierInvocation",
                modifierName: {
                  id: 30535,
                  name: "initializer",
                  nameLocations: ["1046:11:220"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 255,
                  src: "1046:11:220",
                },
                nodeType: "ModifierInvocation",
                src: "1046:11:220",
              },
            ],
            name: "initialize",
            nameLocation: "930:10:220",
            parameters: {
              id: 30534,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 30529,
                  mutability: "mutable",
                  name: "_totalSupply",
                  nameLocation: "958:12:220",
                  nodeType: "VariableDeclaration",
                  scope: 30550,
                  src: "950:20:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 30528,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "950:7:220",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 30531,
                  mutability: "mutable",
                  name: "_name",
                  nameLocation: "994:5:220",
                  nodeType: "VariableDeclaration",
                  scope: 30550,
                  src: "980:19:220",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 30530,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "980:6:220",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 30533,
                  mutability: "mutable",
                  name: "_symbol",
                  nameLocation: "1023:7:220",
                  nodeType: "VariableDeclaration",
                  scope: 30550,
                  src: "1009:21:220",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_string_memory_ptr",
                    typeString: "string",
                  },
                  typeName: {
                    id: 30532,
                    name: "string",
                    nodeType: "ElementaryTypeName",
                    src: "1009:6:220",
                    typeDescriptions: {
                      typeIdentifier: "t_string_storage_ptr",
                      typeString: "string",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "940:96:220",
            },
            returnParameters: {
              id: 30537,
              nodeType: "ParameterList",
              parameters: [],
              src: "1058:0:220",
            },
            scope: 30614,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            id: 30559,
            nodeType: "FunctionDefinition",
            src: "1187:90:220",
            nodes: [],
            body: {
              id: 30558,
              nodeType: "Block",
              src: "1244:33:220",
              nodes: [],
              statements: [
                {
                  expression: {
                    id: 30556,
                    name: "_decimals",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 30511,
                    src: "1261:9:220",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                  },
                  functionReturnParameters: 30555,
                  id: 30557,
                  nodeType: "Return",
                  src: "1254:16:220",
                },
              ],
            },
            baseFunctions: [448],
            functionSelector: "313ce567",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "decimals",
            nameLocation: "1196:8:220",
            overrides: {
              id: 30552,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "1219:8:220",
            },
            parameters: {
              id: 30551,
              nodeType: "ParameterList",
              parameters: [],
              src: "1204:2:220",
            },
            returnParameters: {
              id: 30555,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 30554,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 30559,
                  src: "1237:5:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint8",
                    typeString: "uint8",
                  },
                  typeName: {
                    id: 30553,
                    name: "uint8",
                    nodeType: "ElementaryTypeName",
                    src: "1237:5:220",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1236:7:220",
            },
            scope: 30614,
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            id: 30575,
            nodeType: "FunctionDefinition",
            src: "1283:233:220",
            nodes: [],
            body: {
              id: 30574,
              nodeType: "Block",
              src: "1456:60:220",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 30571,
                        name: "_account",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 30561,
                        src: "1500:8:220",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      ],
                      expression: {
                        id: 30569,
                        name: "ERC20Upgradeable",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 965,
                        src: "1473:16:220",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_ERC20Upgradeable_$965_$",
                          typeString: "type(contract ERC20Upgradeable)",
                        },
                      },
                      id: 30570,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberLocation: "1490:9:220",
                      memberName: "balanceOf",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 472,
                      src: "1473:26:220",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        typeString: "function (address) view returns (uint256)",
                      },
                    },
                    id: 30572,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1473:36:220",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 30568,
                  id: 30573,
                  nodeType: "Return",
                  src: "1466:43:220",
                },
              ],
            },
            baseFunctions: [472, 32134],
            functionSelector: "70a08231",
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "balanceOf",
            nameLocation: "1292:9:220",
            overrides: {
              id: 30565,
              nodeType: "OverrideSpecifier",
              overrides: [
                {
                  id: 30563,
                  name: "TokenRouter",
                  nameLocations: ["1395:11:220"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 32189,
                  src: "1395:11:220",
                },
                {
                  id: 30564,
                  name: "ERC20Upgradeable",
                  nameLocations: ["1408:16:220"],
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 965,
                  src: "1408:16:220",
                },
              ],
              src: "1386:39:220",
            },
            parameters: {
              id: 30562,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 30561,
                  mutability: "mutable",
                  name: "_account",
                  nameLocation: "1319:8:220",
                  nodeType: "VariableDeclaration",
                  scope: 30575,
                  src: "1311:16:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 30560,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1311:7:220",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1301:32:220",
            },
            returnParameters: {
              id: 30568,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 30567,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 30575,
                  src: "1443:7:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 30566,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1443:7:220",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1442:9:220",
            },
            scope: 30614,
            stateMutability: "view",
            virtual: true,
            visibility: "public",
          },
          {
            id: 30596,
            nodeType: "FunctionDefinition",
            src: "1633:185:220",
            nodes: [],
            body: {
              id: 30595,
              nodeType: "Block",
              src: "1734:84:220",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        expression: {
                          id: 30585,
                          name: "msg",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: -15,
                          src: "1750:3:220",
                          typeDescriptions: {
                            typeIdentifier: "t_magic_message",
                            typeString: "msg",
                          },
                        },
                        id: 30586,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberLocation: "1754:6:220",
                        memberName: "sender",
                        nodeType: "MemberAccess",
                        src: "1750:10:220",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 30587,
                        name: "_amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 30578,
                        src: "1762:7:220",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 30584,
                      name: "_burn",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 849,
                      src: "1744:5:220",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 30588,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1744:26:220",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 30589,
                  nodeType: "ExpressionStatement",
                  src: "1744:26:220",
                },
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "",
                        id: 30592,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "1793:2:220",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                        value: "",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier:
                            "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          typeString: 'literal_string ""',
                        },
                      ],
                      id: 30591,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      lValueRequested: false,
                      nodeType: "ElementaryTypeNameExpression",
                      src: "1787:5:220",
                      typeDescriptions: {
                        typeIdentifier: "t_type$_t_bytes_storage_ptr_$",
                        typeString: "type(bytes storage pointer)",
                      },
                      typeName: {
                        id: 30590,
                        name: "bytes",
                        nodeType: "ElementaryTypeName",
                        src: "1787:5:220",
                        typeDescriptions: {},
                      },
                    },
                    id: 30593,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "typeConversion",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "1787:9:220",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_bytes_memory_ptr",
                      typeString: "bytes memory",
                    },
                  },
                  functionReturnParameters: 30583,
                  id: 30594,
                  nodeType: "Return",
                  src: "1780:16:220",
                },
              ],
            },
            baseFunctions: [32126],
            documentation: {
              id: 30576,
              nodeType: "StructuredDocumentation",
              src: "1522:106:220",
              text: " @dev Burns `_amount` of token from `msg.sender` balance.\n @inheritdoc TokenRouter",
            },
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "_transferFromSender",
            nameLocation: "1642:19:220",
            overrides: {
              id: 30580,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "1702:8:220",
            },
            parameters: {
              id: 30579,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 30578,
                  mutability: "mutable",
                  name: "_amount",
                  nameLocation: "1679:7:220",
                  nodeType: "VariableDeclaration",
                  scope: 30596,
                  src: "1671:15:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 30577,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1671:7:220",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1661:31:220",
            },
            returnParameters: {
              id: 30583,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 30582,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 30596,
                  src: "1720:12:220",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_bytes_memory_ptr",
                    typeString: "bytes",
                  },
                  typeName: {
                    id: 30581,
                    name: "bytes",
                    nodeType: "ElementaryTypeName",
                    src: "1720:5:220",
                    typeDescriptions: {
                      typeIdentifier: "t_bytes_storage_ptr",
                      typeString: "bytes",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1719:14:220",
            },
            scope: 30614,
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "internal",
          },
          {
            id: 30613,
            nodeType: "FunctionDefinition",
            src: "1933:188:220",
            nodes: [],
            body: {
              id: 30612,
              nodeType: "Block",
              src: "2078:43:220",
              nodes: [],
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 30608,
                        name: "_recipient",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 30599,
                        src: "2094:10:220",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 30609,
                        name: "_amount",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 30601,
                        src: "2106:7:220",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 30607,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 777,
                      src: "2088:5:220",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 30610,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    nameLocations: [],
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2088:26:220",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 30611,
                  nodeType: "ExpressionStatement",
                  src: "2088:26:220",
                },
              ],
            },
            baseFunctions: [32188],
            documentation: {
              id: 30597,
              nodeType: "StructuredDocumentation",
              src: "1824:104:220",
              text: " @dev Mints `_amount` of token to `_recipient` balance.\n @inheritdoc TokenRouter",
            },
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "_transferTo",
            nameLocation: "1942:11:220",
            overrides: {
              id: 30605,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "2069:8:220",
            },
            parameters: {
              id: 30604,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 30599,
                  mutability: "mutable",
                  name: "_recipient",
                  nameLocation: "1971:10:220",
                  nodeType: "VariableDeclaration",
                  scope: 30613,
                  src: "1963:18:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 30598,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1963:7:220",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 30601,
                  mutability: "mutable",
                  name: "_amount",
                  nameLocation: "1999:7:220",
                  nodeType: "VariableDeclaration",
                  scope: 30613,
                  src: "1991:15:220",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 30600,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1991:7:220",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 30603,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 30613,
                  src: "2016:14:220",
                  stateVariable: false,
                  storageLocation: "calldata",
                  typeDescriptions: {
                    typeIdentifier: "t_bytes_calldata_ptr",
                    typeString: "bytes",
                  },
                  typeName: {
                    id: 30602,
                    name: "bytes",
                    nodeType: "ElementaryTypeName",
                    src: "2016:5:220",
                    typeDescriptions: {
                      typeIdentifier: "t_bytes_storage_ptr",
                      typeString: "bytes",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1953:98:220",
            },
            returnParameters: {
              id: 30606,
              nodeType: "ParameterList",
              parameters: [],
              src: "2078:0:220",
            },
            scope: 30614,
            stateMutability: "nonpayable",
            virtual: true,
            visibility: "internal",
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 30506,
              name: "ERC20Upgradeable",
              nameLocations: ["461:16:220"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 965,
              src: "461:16:220",
            },
            id: 30507,
            nodeType: "InheritanceSpecifier",
            src: "461:16:220",
          },
          {
            baseName: {
              id: 30508,
              name: "TokenRouter",
              nameLocations: ["479:11:220"],
              nodeType: "IdentifierPath",
              referencedDeclaration: 32189,
              src: "479:11:220",
            },
            id: 30509,
            nodeType: "InheritanceSpecifier",
            src: "479:11:220",
          },
        ],
        canonicalName: "HypERC20",
        contractDependencies: [],
        contractKind: "contract",
        documentation: {
          id: 30505,
          nodeType: "StructuredDocumentation",
          src: "222:217:220",
          text: " @title Hyperlane ERC20 Token Router that extends ERC20 with remote transfer functionality.\n @author Abacus Works\n @dev Supply on each chain is not constant but the aggregate supply across all chains is.",
        },
        fullyImplemented: true,
        linearizedBaseContracts: [
          30614, 32189, 17612, 18266, 20951, 17881, 184, 965, 80331, 80306,
          79898, 353,
        ],
        name: "HypERC20",
        nameLocation: "449:8:220",
        scope: 30615,
        usedErrors: [],
      },
    ],
    license: "Apache-2.0",
  },
  id: 220,
} as const;
